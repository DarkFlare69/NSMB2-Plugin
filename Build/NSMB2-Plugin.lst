00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
0000000c 00000001 B CTRPluginFramework::PrivColor::_useClamp
0000000d 00000001 b __tls_guard
00000010 00000010 B CTRPluginFramework::PrivColor::_clampArea
07000100 T __start__
07000100 T _start
07000130 t ClearMem
07000144 t ClrLoop
0700015c T _init
07000174 T initLib
07000194 T __ctru_exit
070001a0 t .udivsi3_skip_div0_test
070001a0 T __aeabi_uidiv
070001a0 000001ec T __udivsi3
0700038c 00000020 T __aeabi_uidivmod
070003ac T __aeabi_idiv
070003ac 00000220 T __divsi3
070003b4 t .divsi3_skip_div0_test
070005cc 00000020 T __aeabi_idivmod
070005ec 00000004 W __aeabi_idiv0
070005ec 00000004 W __aeabi_ldiv0
070005f0 0000019c T __aeabi_frsub
070005f8 00000194 T __aeabi_fsub
070005f8 00000194 T __subsf3
070005fc 00000190 T __addsf3
070005fc 00000190 T __aeabi_fadd
0700078c 00000028 T __aeabi_ui2f
0700078c 00000028 T __floatunsisf
07000794 00000020 T __aeabi_i2f
07000794 00000020 T __floatsisf
070007b4 0000008c T __aeabi_ul2f
070007b4 0000008c T __floatundisf
070007c4 0000007c T __aeabi_l2f
070007c4 0000007c T __floatdisf
07000840 T __aeabi_ldivmod
07000914 00000014 T __restore_core_regs
07000914 00000014 T restore_core_regs
07000928 T __gnu_Unwind_Restore_VFP
07000930 T __gnu_Unwind_Save_VFP
07000938 T __gnu_Unwind_Restore_VFP_D
07000940 T __gnu_Unwind_Save_VFP_D
07000948 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000950 T __gnu_Unwind_Save_VFP_D_16_to_31
07000958 T __gnu_Unwind_Restore_WMMXD
0700099c T __gnu_Unwind_Save_WMMXD
070009e0 T __gnu_Unwind_Restore_WMMXC
070009f4 T __gnu_Unwind_Save_WMMXC
07000a08 00000024 T ___Unwind_RaiseException
07000a08 00000024 T _Unwind_RaiseException
07000a2c 00000024 T ___Unwind_Resume
07000a2c 00000024 T _Unwind_Resume
07000a50 00000024 T ___Unwind_Resume_or_Rethrow
07000a50 00000024 T _Unwind_Resume_or_Rethrow
07000a74 00000024 T ___Unwind_ForcedUnwind
07000a74 00000024 T _Unwind_ForcedUnwind
07000a98 00000024 T ___Unwind_Backtrace
07000a98 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t deregister_tm_clones
07001278 t register_tm_clones
070012b0 t __do_global_dtors_aux
070012f4 t frame_dummy
07001328 0000014c T CTRPluginFramework::freefly(CTRPluginFramework::MenuEntry*)
07001474 00000064 T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
070014d8 00000020 t std::vector<CTRPluginFramework::setSpeed(CTRPluginFramework::MenuEntry*)::SNumber, std::allocator<CTRPluginFramework::setSpeed(CTRPluginFramework::MenuEntry*)::SNumber> >::~vector()
070014d8 00000020 t std::vector<CTRPluginFramework::setSpeed(CTRPluginFramework::MenuEntry*)::SNumber, std::allocator<CTRPluginFramework::setSpeed(CTRPluginFramework::MenuEntry*)::SNumber> >::~vector()
070014f8 00000020 t std::vector<CTRPluginFramework::setPowerUp(CTRPluginFramework::MenuEntry*)::PowerUp, std::allocator<CTRPluginFramework::setPowerUp(CTRPluginFramework::MenuEntry*)::PowerUp> >::~vector()
070014f8 00000020 t std::vector<CTRPluginFramework::setPowerUp(CTRPluginFramework::MenuEntry*)::PowerUp, std::allocator<CTRPluginFramework::setPowerUp(CTRPluginFramework::MenuEntry*)::PowerUp> >::~vector()
07001518 00000020 t std::vector<CTRPluginFramework::setBottomPowerUp(CTRPluginFramework::MenuEntry*)::PowerUps, std::allocator<CTRPluginFramework::setBottomPowerUp(CTRPluginFramework::MenuEntry*)::PowerUps> >::~vector()
07001518 00000020 t std::vector<CTRPluginFramework::setBottomPowerUp(CTRPluginFramework::MenuEntry*)::PowerUps, std::allocator<CTRPluginFramework::setBottomPowerUp(CTRPluginFramework::MenuEntry*)::PowerUps> >::~vector()
07001538 00000020 t std::vector<CTRPluginFramework::setOverworldPowerUp(CTRPluginFramework::MenuEntry*)::PowerUp, std::allocator<CTRPluginFramework::setOverworldPowerUp(CTRPluginFramework::MenuEntry*)::PowerUp> >::~vector()
07001538 00000020 t std::vector<CTRPluginFramework::setOverworldPowerUp(CTRPluginFramework::MenuEntry*)::PowerUp, std::allocator<CTRPluginFramework::setOverworldPowerUp(CTRPluginFramework::MenuEntry*)::PowerUp> >::~vector()
07001558 00000054 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
070015ac 00000054 T CTRPluginFramework::infiniteStar(CTRPluginFramework::MenuEntry*)
07001600 00000078 T CTRPluginFramework::alwaysFly(CTRPluginFramework::MenuEntry*)
07001678 00000060 T CTRPluginFramework::infiniteFireballs(CTRPluginFramework::MenuEntry*)
070016d8 00000050 T CTRPluginFramework::multiJump(CTRPluginFramework::MenuEntry*)
07001728 00000074 T CTRPluginFramework::infiniteTimer(CTRPluginFramework::MenuEntry*)
0700179c 000000a0 T CTRPluginFramework::rapidFire(CTRPluginFramework::MenuEntry*)
0700183c 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
0700183c 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
0700185c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.142]
070018e8 000001e0 T CTRPluginFramework::touchTeleporter(CTRPluginFramework::MenuEntry*)
07001ac8 000000b8 T CTRPluginFramework::setScore(CTRPluginFramework::MenuEntry*)
07001b80 000000bc T CTRPluginFramework::setCoins(CTRPluginFramework::MenuEntry*)
07001c3c 000000b8 T CTRPluginFramework::setWorldLives(CTRPluginFramework::MenuEntry*)
07001cf4 000000c8 T CTRPluginFramework::setStarCoins(CTRPluginFramework::MenuEntry*)
07001dbc 000000bc T CTRPluginFramework::setOverworldCoins(CTRPluginFramework::MenuEntry*)
07001e78 000000b0 T CTRPluginFramework::infiniteGoldHead(CTRPluginFramework::MenuEntry*)
07001f28 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001f28 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001f64 000001e8 T CTRPluginFramework::displayStartMessage()
0700214c 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070021b0 000009bc T CTRPluginFramework::main()
07002b6c 000000e0 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07002c4c 000001d4 t CTRPluginFramework::ToggleTouchscreenForceOn()
07002e20 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07002e24 00000004 T CTRPluginFramework::OnProcessExit()
07002e28 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07002f98 0000003c W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07002fd4 00000270 T CTRPluginFramework::setSpeed(CTRPluginFramework::MenuEntry*)
07003244 000001d4 T CTRPluginFramework::setPowerUp(CTRPluginFramework::MenuEntry*)
07003418 00000218 T CTRPluginFramework::setBottomPowerUp(CTRPluginFramework::MenuEntry*)
07003630 000001e8 T CTRPluginFramework::setOverworldPowerUp(CTRPluginFramework::MenuEntry*)
07003818 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
07003890 00000038 T OnLoadCro
070038c8 00000170 T CTRPluginFramework::Initialize()
07003a38 000000b0 T CTRPluginFramework::ThreadExit()
07003ae8 00000060 T abort
07003b48 0000003c T CTRPluginFramework::ThreadInit(void*)
07003b84 0000008c T LaunchMainThread
07003c10 00000408 T CTRPluginFramework::KeepThreadMain(void*)
07004018 0000000c t _GLOBAL__sub_I_g_mainThread
07004024 0000007c T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070040a0 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
070040a0 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
070040b8 0000000c T CTRPluginFramework::Color::Color(unsigned long)
070040b8 0000000c T CTRPluginFramework::Color::Color(unsigned long)
070040c4 00000008 T CTRPluginFramework::Color::ToU32() const
070040d0 00000120 T CTRPluginFramework::Color::Fade(double)
070041f0 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
07004230 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
070042ac 00000214 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
070044c0 00000120 t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
070045e0 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070045e0 00000070 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07004650 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
07004650 0000002c T CTRPluginFramework::PluginMenu::~PluginMenu()
0700467c 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
07004690 00000044 T CTRPluginFramework::PluginMenu::Run() const
070046d4 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
070046dc 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
070046ec 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
070046f8 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070046f8 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004738 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07004738 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07004760 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
07004770 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuFolder*) const
07004780 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004780 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070047cc 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070047cc 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700481c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700481c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0700484c 00000008 T CTRPluginFramework::MenuEntry::WasJustActivated() const
07004854 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
0700485c 00000030 W CTRPluginFramework::TextBox::~TextBox()
0700485c 00000030 W CTRPluginFramework::TextBox::~TextBox()
0700488c 0000001c W CTRPluginFramework::TextBox::~TextBox()
070048a8 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070048a8 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070048f0 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070048f0 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0700492c 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
0700492c 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
07004968 0000000c T CTRPluginFramework::MessageBox::SetClear(CTRPluginFramework::ClearScreen)
07004974 00000008 T CTRPluginFramework::MessageBox::operator()() const
0700497c 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07004a40 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07004ae8 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004ae8 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004b30 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07004b30 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07004b98 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07004b98 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
07004bc4 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
07004bcc 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07004be8 00000028 T CTRPluginFramework::Keyboard::Open() const
07004c10 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
07004c88 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07004d38 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07004d8c 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07004df4 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07004dfc 00000008 T CTRPluginFramework::Keyboard::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)) const
07004e04 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
07004ea0 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07004f2c 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
07004fd4 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
070050bc 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07005148 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
070051f0 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
070052d8 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07005364 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
0700540c 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
070054f4 00000028 t __tcf_0
0700551c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.31]
07005594 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
0700559c 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
0700561c 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07005698 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07005770 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07005770 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
0700578c 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
0700578c 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070057cc 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
070057dc 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
0700589c 00000020 T CTRPluginFramework::HotkeyManager::Count()
070058bc 00000170 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07005a2c 0000012c T CTRPluginFramework::HotkeyManager::AskForKeys()
07005b58 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07005c80 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.11]
07005cf0 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.68]
07005d78 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07005dbc 0000004c T CTRPluginFramework::Directory::Close() const
07005e08 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07005e1c 00000008 T CTRPluginFramework::Directory::IsOpen() const
07005e24 00000040 T CTRPluginFramework::Directory::Directory()
07005e24 00000040 T CTRPluginFramework::Directory::Directory()
07005e64 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
07005e98 00000060 T CTRPluginFramework::Directory::~Directory()
07005e98 00000060 T CTRPluginFramework::Directory::~Directory()
07005ef8 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07005ef8 00000020 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07005f18 00000098 T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07005fb0 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006048 000000a0 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070060e8 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070061bc 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006250 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700639c 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0700639c 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070063f4 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07006430 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07006430 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
0700644c 00000170 W void std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::_M_realloc_insert<CTRPluginFramework::Directory::DirectoryEntry>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry&&)
070065bc 0000001c W CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&)
070065d8 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.40]
07006700 00000078 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&) [clone .isra.42]
07006778 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.64]
070067e0 000000ac t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>) [clone .isra.87]
0700688c 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
070068d0 000001dc t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07006aac 000001b4 T CTRPluginFramework::Directory::_List() const
07006c60 000000e0 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07006d40 000000e4 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07006e24 0000000c T CTRPluginFramework::FwkSettings::Get()
07006e30 000000e0 T CTRPluginFramework::FwkSettings::SetThemeDefault()
07006f10 00000010 T CTRPluginFramework::Process::GetHandle()
07006f20 00000010 T CTRPluginFramework::Process::GetTitleID()
07006f30 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07006f8c 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07006fc4 00000024 T CTRPluginFramework::Process::GetTextSize()
07006fe8 00000008 T CTRPluginFramework::Process::Pause()
07006ff0 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07007000 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
070070a8 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
070070ac 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
070070f8 00000038 T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
07007130 0000001c T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
0700714c 00000024 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
07007170 0000003c T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070071ac 00000028 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
070071d4 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
070071f4 00000020 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
07007214 0000002c T CTRPluginFramework::Hook::Hook()
07007214 0000002c T CTRPluginFramework::Hook::Hook()
07007240 00000018 T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long, unsigned long)
07007258 00000230 T CTRPluginFramework::Hook::Enable()
07007488 0000005c T CTRPluginFramework::Hook::Disable()
070074e4 00000014 T CTRPluginFramework::Mutex::Mutex()
070074e4 00000014 T CTRPluginFramework::Mutex::Mutex()
070074f8 00000028 T CTRPluginFramework::Mutex::~Mutex()
070074f8 00000028 T CTRPluginFramework::Mutex::~Mutex()
07007520 00000004 T CTRPluginFramework::Mutex::Lock()
07007524 00000014 T CTRPluginFramework::Mutex::TryLock()
07007538 00000004 T CTRPluginFramework::Mutex::Unlock()
0700753c 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
0700753c 00000024 T CTRPluginFramework::Lock::Lock(CTRPluginFramework::Mutex&)
07007560 0000004c T CTRPluginFramework::Lock::~Lock()
07007560 0000004c T CTRPluginFramework::Lock::~Lock()
070075ac 00000074 T CTRPluginFramework::File::Close() const
07007620 000000b8 T CTRPluginFramework::File::Read(void*, unsigned long) const
070076d8 000000f0 T CTRPluginFramework::File::Write(void const*, unsigned long)
070077c8 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070077f4 000000e4 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
070078d8 00000008 T CTRPluginFramework::File::Tell() const
070078e0 00000030 T CTRPluginFramework::File::Rewind() const
07007910 00000034 T CTRPluginFramework::File::Flush() const
07007944 0000006c T CTRPluginFramework::File::GetSize() const
070079b0 00000008 T CTRPluginFramework::File::IsOpen() const
070079b8 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
070079cc 00000044 T CTRPluginFramework::File::File()
070079cc 00000044 T CTRPluginFramework::File::File()
07007a10 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007aa4 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007b78 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007bfc 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07007c9c 00000108 T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07007da4 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07007da4 0000006c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07007e10 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
07007e58 00000014 T CTRPluginFramework::Time::Time()
07007e58 00000014 T CTRPluginFramework::Time::Time()
07007e6c 00000020 T CTRPluginFramework::Time::AsSeconds() const
07007e8c 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
07007ea4 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
07007eac 00000028 T CTRPluginFramework::Seconds(float)
07007ed4 00000010 T CTRPluginFramework::Milliseconds(int)
07007ee4 00000008 T CTRPluginFramework::Microseconds(long long)
07007eec 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
07007f00 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
07007f14 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
07007f28 00000018 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
07007f40 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
07007f8c 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
07007fa4 00000010 T CTRPluginFramework::System::IsNew3DS()
07007fb4 00000014 T CTRPluginFramework::Controller::GetKeysDown()
07007fc8 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
07007fe4 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
07008000 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
0700801c 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
07008038 0000002c T CTRPluginFramework::Controller::InjectKey(unsigned long)
07008064 0000002c T CTRPluginFramework::Controller::Update()
07008090 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.37]
07008108 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07008164 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
070081c0 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
0700821c 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
07008260 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
070082e0 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008394 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070084d0 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
07008508 0000001c T CTRPluginFramework::InitializeRandomEngine()
07008524 00000254 t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07008778 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
07008778 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
070087bc 00000740 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07008efc 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008f04 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07008f48 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
07009054 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
070090bc 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
070090d8 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
07009114 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07009138 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700915c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.19]
070091d4 00000024 W CTRPluginFramework::File::~File()
070091d4 00000024 W CTRPluginFramework::File::~File()
070091f8 00000030 T CTRPluginFramework::GetRatio(int, int, int, int)
07009228 0000010c T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
07009334 000001cc t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
07009500 000002e0 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
070097e0 000000cc T CTRPluginFramework::Preferences::LoadSettings()
070098ac 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
07009968 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
07009a24 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
07009a80 00000050 T CTRPluginFramework::Preferences::LoadBackgrounds()
07009ad0 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
07009b50 000001d0 T CTRPluginFramework::Preferences::WriteSettings()
07009d20 00000004 T CTRPluginFramework::Preferences::Initialize()
07009d24 000000ec t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07009e10 00000010 T CTRPluginFramework::Glyph::Width() const
07009e20 00000060 T CTRPluginFramework::Font::Initialize()
07009e80 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0700a1d4 00000304 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0700a4d8 0000010c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0700a5e4 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0700a64c 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0700a66c 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0700a69c 00000020 W CTRPluginFramework::Renderer::GetContext()
0700a6bc 00000060 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0700a71c 00000168 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0700a884 0000016c T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700a9f0 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0700aa90 000001e8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0700ac78 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0700aca8 00000028 T CTRPluginFramework::Window::~Window()
0700aca8 00000028 T CTRPluginFramework::Window::~Window()
0700acd0 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700acd0 000000a0 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0700ad70 00000064 T CTRPluginFramework::Window::Draw() const
0700add4 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700aeac 00000018 T CTRPluginFramework::Window::DrawButton() const
0700aec4 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0700aedc 00000018 T CTRPluginFramework::Window::MustClose() const
0700aef4 0000002c T CTRPluginFramework::Window::Close() const
0700af20 00000004 T CTRPluginFramework::Window::GetRect() const
0700af24 0000002c T CTRPluginFramework::Window::UpdateBackgrounds()
0700af50 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0700aff8 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0700b128 000000cc T CTRPluginFramework::Renderer::GetTextSize(char const*)
0700b1f4 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0700b340 00000144 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700b484 00000038 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0700b4bc 000001a0 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0700b65c 000001c4 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0700b820 00000234 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0700ba54 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0700bac4 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0700bb30 00000014 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0700bb44 00000024 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0700bb68 0000001c T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0700bb84 00000030 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0700bbb4 00000030 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0700bbe4 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0700bc0c 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0700bc34 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0700bc54 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0700bc90 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0700bcd8 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0700bd1c 0000011c T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0700be38 00000020 T CTRPluginFramework::PrivColor::UseClamp(bool)
0700be58 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0700bec8 00000038 t __tls_init
0700bec8 00000038 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0700bf00 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
0700bf3c 00000074 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700bfb0 0000006c T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700c01c 00000088 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700c0a4 00000094 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700c138 00000090 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0700c1c8 00000008 W CTRPluginFramework::Drawable::operator()()
0700c1d0 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0700c1d4 000002f0 T CTRPluginFramework::TextBox::Draw()
0700c4c4 00000094 T CTRPluginFramework::TextBox::TextBox()
0700c4c4 00000094 T CTRPluginFramework::TextBox::TextBox()
0700c558 0000000c T CTRPluginFramework::TextBox::Open() const
0700c564 0000000c T CTRPluginFramework::TextBox::Close() const
0700c570 00000008 T CTRPluginFramework::TextBox::IsOpen() const
0700c578 00000248 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0700c7c0 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0700c7cc 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
0700c864 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
0700c918 00000058 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
0700c970 00000030 W unsigned char** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned char*>(unsigned char* const*, unsigned char* const*, unsigned char**)
0700c9a0 000000bc W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
0700ca5c 000000bc W void std::vector<unsigned char*, std::allocator<unsigned char*> >::emplace_back<unsigned char*>(unsigned char*&&)
0700cb18 000001c8 T CTRPluginFramework::TextBox::_GetTextInfos()
0700cce0 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0700cce0 00000144 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0700ce24 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0700cf0c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.20]
0700cf84 00000070 t CTRPluginFramework::memset32(void*, unsigned char, unsigned long) [clone .constprop.23]
0700cff4 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
0700d018 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
0700d03c 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0700d03c 00000040 T CTRPluginFramework::BMPImage::~BMPImage()
0700d07c 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
0700d084 00000008 T CTRPluginFramework::BMPImage::Width() const
0700d08c 00000008 T CTRPluginFramework::BMPImage::Height() const
0700d094 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
0700d09c 00000010 T CTRPluginFramework::BMPImage::data() const
0700d0ac 0000001c T CTRPluginFramework::BMPImage::end() const
0700d0c8 00000010 W CTRPluginFramework::BMPImage::DataClear()
0700d0d8 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
0700d0d8 000000a8 T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long, bool)
0700d180 0000003c T CTRPluginFramework::BMPImage::Unload()
0700d1bc 0000013c T CTRPluginFramework::BMPImage::Draw(int, int)
0700d2f8 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
0700d300 00000250 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0700d550 000001d4 T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0700d724 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
0700d76c 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
0700d79c 000000d4 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0700d870 00000080 T CTRPluginFramework::BMPImage::_CreateBitmap()
0700d8f0 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
0700d914 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0700da30 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700da30 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
0700da84 00000320 T CTRPluginFramework::BMPImage::_LoadBitmap()
0700dda4 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700dda4 0000004c T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700ddf0 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0700de3c 00000310 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0700e14c 000000c0 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0700e20c 00000130 T CTRPluginFramework::Renderer::EndFrame(bool)
0700e33c 0000016c t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
0700e4a8 00000040 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.46]
0700e4e8 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700e4e8 00000020 W std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::~vector()
0700e508 00000170 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0700e678 000000f4 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0700e76c 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0700e800 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0700e8a8 0000028c T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700eb34 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0700eb34 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0700eb78 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0700ebcc 00000188 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0700ed54 000000ac W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0700ee00 00000040 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
0700ee40 00000680 T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0700f4c0 000001a8 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700f668 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0700f668 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0700f694 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0700f694 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0700f6b4 000000b0 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.37]
0700f764 0000005c t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .constprop.38]
0700f7c0 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700f7c0 00000084 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0700f844 0000000c T CTRPluginFramework::OSDImpl::Lock()
0700f850 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0700f86c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0700f878 000000cc T CTRPluginFramework::OSDImpl::Draw()
0700f944 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
0700fa1c 0000002c T CTRPluginFramework::OSDImpl::WaitFramePaused()
0700fa48 00000048 T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
0700fa90 0000020c T CTRPluginFramework::InstallOSD()
0700fc9c 00000048 T CTRPluginFramework::OSDImpl::_Initialize()
0700fce4 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0700fdbc 00000108 T CTRPluginFramework::OSDImpl::Update()
0700fec4 00000688 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
0701054c 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
070105b4 0000006c T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07010620 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07010620 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07010798 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07010798 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070108f0 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07010968 000002b4 T CTRPluginFramework::MessageBoxImpl::_Draw()
07010c1c 0000019c T CTRPluginFramework::MessageBoxImpl::operator()()
07010db8 00000220 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07010fd8 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
07011004 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
07011040 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0701107c 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
070110b8 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
070110f4 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
07011130 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0701115c 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07011198 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
070111d4 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
07011210 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0701124c 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
07011278 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
070112b4 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
070112e0 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0701130c 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
07011348 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
07011374 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
070113b0 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
070113dc 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
07011410 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0701144c 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
07011478 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
070114b4 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
070114e0 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0701150c 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
07011538 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
07011564 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07011590 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
070115bc 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
070115e8 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
07011614 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07011650 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
0701167c 00000090 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.167]
0701170c 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0701170c 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0701172c 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701172c 000000e0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701180c 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
07011814 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
07011814 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
070118a8 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
070118c8 00000188 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07011a50 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07011a70 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
07011a8c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
07011aa8 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
07011ab0 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
07011ab8 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07011ab8 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07011ad8 000000e4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
07011bbc 000006fc T CTRPluginFramework::PluginMenuImpl::Run()
070122b8 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
07012310 000000e4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
070123f4 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
07012430 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
07012560 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0701269c 000000b8 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
07012754 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0701285c 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0701285c 00000084 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
070128e0 000000f4 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
070129d4 00000138 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
07012b0c 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07012ca4 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07012ca4 000000fc W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
07012da0 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07012da0 000001a0 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
07012f40 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
07012fb8 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07012fb8 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07013094 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07013094 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
070131ac 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
070131e8 00000058 T CTRPluginFramework::Menu::CloseAll()
07013240 00000030 T CTRPluginFramework::Menu::~Menu()
07013240 00000030 T CTRPluginFramework::Menu::~Menu()
07013270 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0701327c 00000008 T CTRPluginFramework::Menu::GetFolder() const
07013284 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0701328c 00000040 T CTRPluginFramework::Menu::GetSelectedItem()
070132cc 00000384 T CTRPluginFramework::Menu::Draw() const
07013650 0000008c T CTRPluginFramework::Menu::_ScrollUp(int)
070136dc 0000008c T CTRPluginFramework::Menu::_ScrollDown(int)
07013768 00000228 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07013990 00000174 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07013b04 00000068 T CTRPluginFramework::Menu::ShowNote()
07013b6c 00000008 T CTRPluginFramework::Menu::CloseNote()
07013b74 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07013b7c 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07013bbc 00000044 T CTRPluginFramework::Menu::Pop()
07013c00 000000c4 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
07013cc4 000000b8 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
07013d7c 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
07013d84 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07013d84 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
07013dac 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
07013dc8 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07013dc8 000000d4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07013e9c 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07013eb8 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013eb8 000000b8 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013f70 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013f70 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701402c 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
07014040 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
07014090 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
070140a8 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
070140cc 000000a8 T CTRPluginFramework::MenuFolderImpl::Clear()
07014174 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
07014184 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
070141a8 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07014208 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07014218 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
07014228 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
07014238 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
070142c8 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
070143e4 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
07014454 000000a4 T CTRPluginFramework::HotkeysModifier::operator()()
070144f8 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
07014524 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07014524 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
07014554 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
07014554 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
070145c0 00000154 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button&&)
07014714 0000003c W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::emplace_back<CTRPluginFramework::Button>(CTRPluginFramework::Button&&)
07014750 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014750 0000016c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070148bc 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
07014914 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
070149c8 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
07014aa8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
07014b20 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07014b20 000004c4 T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07014fe4 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
07014ff0 00000320 T CTRPluginFramework::PluginMenuHome::_RenderTop()
07015310 00000108 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07015418 00000454 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0701586c 0000011c T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07015988 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07015a14 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
07015a50 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07015a7c 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07015b4c 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
07015bcc 0000007c T CTRPluginFramework::PluginMenuHome::Init()
07015c48 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07015ccc 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07015d28 00000040 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07015d68 00000130 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07015e98 0000033c T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
070161d4 00000214 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
070163e8 00000018 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
07016400 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
07016414 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
07016428 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0701643c 0000013c t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
07016578 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0701657c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
07016580 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
07016598 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
070165b0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
070165c8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
070165e0 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
070165f8 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
07016610 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
07016628 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
07016640 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
07016658 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&)
0701669c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
07016714 00000064 t CTRPluginFramework::MenuHotkeyModifier()
07016778 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.76]
07016810 000001a4 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.65]
070169b4 00000184 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07016b38 000000ac t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
07016be4 00000124 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07016d08 0000005c t CTRPluginFramework::Reboot()
07016d64 00000064 t CTRPluginFramework::Shutdown()
07016dc8 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
07016fbc 00000a00 T CTRPluginFramework::PluginMenuTools::InitMenu()
070179bc 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
070179bc 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
07017b4c 0000011c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
07017c68 0000008c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
07017cf4 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
07017d34 00000170 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07017ea4 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
07017f50 00000618 t CTRPluginFramework::ScreenshotMenuCallback()
07018568 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
070185a4 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
070185e0 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
070185f0 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070185f0 000000d8 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070186c8 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
070186c8 0000003c T CTRPluginFramework::SubMenu::~SubMenu()
07018704 0000001c T CTRPluginFramework::SubMenu::operator()()
07018720 00000200 T CTRPluginFramework::SubMenu::Draw()
07018920 000000c4 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
070189e4 00000008 T CTRPluginFramework::SubMenu::IsOpen()
070189ec 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
07018a08 000001a4 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07018bac 0000004c T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07018bf8 00000004 T CTRPluginFramework::HexEditor::FloatView::UpdateView()
07018bf8 00000004 T CTRPluginFramework::HexEditor::FloatView::Draw()
07018bfc 00000004 T CTRPluginFramework::HexEditor::FloatView::ProcessEvent(CTRPluginFramework::Event&)
07018c00 00000004 T CTRPluginFramework::HexEditor::FloatView::EditValueAtCursor(unsigned long)
07018c04 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
07018da0 000000fc T CTRPluginFramework::HexEditor::IntegerView::Draw()
07018e9c 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
07018fd8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.64]
07019050 00000250 T CTRPluginFramework::HexEditor::_RenderTop(void*)
070192a0 00000254 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
070194f4 000001fc T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
070196f0 000001e0 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
070198d0 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
070198ec 000000bc T CTRPluginFramework::HexEditor::_CreateCheat()
070199a8 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
070199c4 00000070 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
07019a34 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
07019a64 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
07019aa0 000000a8 T CTRPluginFramework::HexEditor::_ApplyChanges()
07019b48 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
07019b7c 00000030 T CTRPluginFramework::HexEditor::_GetSelectedItem()
07019bac 0000008c T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
07019c38 00000098 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
07019cd0 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
07019d9c 000000bc T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
07019e58 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
07019f08 00000194 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701a09c 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701a0ac 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701a0bc 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701a0cc 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701a0cc 00000274 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701a340 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0701a384 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701a54c 000000c4 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0701a610 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701a668 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701a74c 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701a8d0 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::HexEditor::Item*>(CTRPluginFramework::HexEditor::Item*, CTRPluginFramework::HexEditor::Item*)
0701a8fc 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701a8fc 00000068 T CTRPluginFramework::HexEditor::~HexEditor()
0701a964 00000028 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::clear()
0701a98c 00000154 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701aae0 00000074 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701ab54 000001a0 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::resize(unsigned int)
0701acf4 00000160 T CTRPluginFramework::HexEditor::_Update()
0701ae54 000002a0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701b0f4 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
0701b108 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701b108 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701b130 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0701b14c 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701b264 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b264 000000d0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b334 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b334 000000d4 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701b408 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
0701b410 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
0701b424 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0701b430 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0701b438 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
0701b45c 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701b48c 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
0701b4a8 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0701b510 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701b510 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701b530 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0701b54c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701b54c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701b5e0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701b5e0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701b640 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701b640 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701b6a0 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0701b6a4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.29]
0701b71c 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
0701b7dc 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0701b810 000003f8 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.32]
0701bc08 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701bc20 000002c4 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701bee4 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701bee4 000001c0 T CTRPluginFramework::GuideReader::GuideReader()
0701c0a4 00000158 T CTRPluginFramework::GuideReader::Draw()
0701c1fc 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701c270 00000068 t CTRPluginFramework::UnitsToNextChar(char const*, int) [clone .part.9]
0701c2d8 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&&, CTRPluginFramework::Rect<int>&) [clone .isra.24]
0701c2d8 00000048 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char&, CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char&, CTRPluginFramework::Rect<int>&) [clone .isra.30]
0701c320 0000004c t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.26]
0701c36c 0000000c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.44]
0701c378 0000002c t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.71]
0701c3a4 0000005c t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.82]
0701c400 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.52]
0701c488 00000064 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.53]
0701c4ec 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.57]
0701c4ec 00000060 t void __gnu_cxx::new_allocator<CTRPluginFramework::TouchKey>::construct<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.55]
0701c54c 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c54c 000001ac T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c6f8 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c6f8 000001bc T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701c8b4 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701c8b4 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701c918 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0701c920 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0701c928 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0701c930 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0701c938 00000008 T CTRPluginFramework::KeyboardImpl::OnInputChange(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::InputChangeEvent&))
0701c940 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
0701caa4 00000458 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0701cefc 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
0701cf8c 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0701d00c 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0701d090 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0701d1f0 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
0701d470 0000056c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
0701d9dc 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
0701da44 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0701da94 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
0701db04 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
0701db0c 000000c4 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
0701dbd0 000001dc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0701ddac 00000064 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
0701de10 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0701de3c 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701de3c 00000020 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701de5c 000000cc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&)
0701df28 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&)
0701dfe4 000000c4 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&)
0701e0a8 0000056c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0701e614 00000570 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0701eb84 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&)
0701ec3c 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
0701f690 000000b8 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&)
0701f748 00000c44 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
0702038c 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
070203d0 000000bc W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&)
0702048c 000001c4 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07020650 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
070206a0 00000058 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
070206f8 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07020740 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
07020a64 00000254 T CTRPluginFramework::KeyboardImpl::Run()
07020cb8 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
07020d30 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07020d44 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07020d68 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
07020df0 00000110 t CTRPluginFramework::ProcessPathString(unsigned char*)
07020f00 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07020f5c 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.63]
07020ff4 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07020ff4 00000250 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07021244 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07021278 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
070212cc 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
070212f0 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07021318 000000dc T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
070213f4 00000124 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07021518 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
070216e4 00000028 W CTRPluginFramework::ARCode::~ARCode()
070216e4 00000028 W CTRPluginFramework::ARCode::~ARCode()
0702170c 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07021884 0000017c T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07021a00 00000168 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07021b68 0000003c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
07021ba4 00000148 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
07021cec 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
07021d1c 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07021df0 00000200 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07021ff0 00000078 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07022068 000000c8 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07022130 000001b8 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
070222e8 000001a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
07022490 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.59]
07022508 0000005c T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
07022564 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0702267c 00000064 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
070226e0 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0702284c 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0702284c 00000458 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07022ca4 000003bc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
07023060 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
070230d0 000000f4 t CTRPluginFramework::ClearSearchFolder()
070231c4 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
070231f8 00000228 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
07023420 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07023448 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
070234b8 000000c8 W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07023580 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
070235bc 00000268 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07023824 000000e4 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07023908 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07023948 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
07023978 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
07023a4c 0000028c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
07023cd8 000003b8 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07024090 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
070240e8 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070240e8 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07024114 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
07024120 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
0702412c 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07024288 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
070242c4 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
070242d0 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
070242dc 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
070242fc 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
07024498 0000005c W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
070244f4 0000015c T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07024650 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07024668 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
0702478c 000000c4 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07024850 000001b0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07024a00 000000c4 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07024ac4 00000080 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07024b44 00000044 T CTRPluginFramework::Search::UpdateProgress()
07024b88 00000194 T CTRPluginFramework::Search::CheckNextRegion()
07024d1c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
07024d94 00000008 T CTRPluginFramework::Search::GetHeader() const
07024d9c 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07024de4 0000000c T CTRPluginFramework::Search::GetType() const
07024df0 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07024e08 00000070 T CTRPluginFramework::Search::WriteHeader()
07024e78 00000058 T CTRPluginFramework::Search::WriteResults()
07024ed0 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
07024f1c 00000240 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0702515c 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0702515c 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0702539c 000000c8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
07025464 00000088 T CTRPluginFramework::Search::CreateIndexTable()
070254ec 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070254ec 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07025694 00000080 T CTRPluginFramework::Search::Cancel()
07025714 00000118 T CTRPluginFramework::Search::ExecuteSearch()
0702582c 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
070258f0 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
070259b0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.108]
07025a28 00000268 T CTRPluginFramework::Search32::SecondSearchUnknown()
07025c90 00000290 T CTRPluginFramework::Search32::SecondSearchSpecified()
07025f20 00000048 W CTRPluginFramework::Search::~Search()
07025f20 00000048 W CTRPluginFramework::Search::~Search()
07025f68 00000044 T CTRPluginFramework::Search32::~Search32()
07025f68 00000044 T CTRPluginFramework::Search32::~Search32()
07025fac 0000001c T CTRPluginFramework::Search32::~Search32()
07025fc8 0000001c W CTRPluginFramework::Search::~Search()
07025fe4 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07025fe4 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0702620c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702620c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702622c 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
0702622c 00000078 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
070262a4 00000158 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
070263fc 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07026448 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0702658c 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
070266d0 00000030 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07026700 000000c4 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
070267c4 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07026800 00000038 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07026838 000000e0 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07026918 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07026964 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
07026c7c 00000178 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07026df4 000002ec T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
070270e0 000001a4 T CTRPluginFramework::Screenshot::UpdateFileCount()
07027284 0000002c T CTRPluginFramework::Screenshot::Initialize()
070272b0 000000ac t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0702735c 00000094 T CTRPluginFramework::SystemImpl::Initialize()
070273f0 0000003c T CTRPluginFramework::SystemImpl::Status()
0702742c 000000c8 T CTRPluginFramework::HookManager::Init()
070274f4 00000018 T CTRPluginFramework::HookManager::Lock()
0702750c 000000a8 T CTRPluginFramework::HookManager::AllocNewHook(unsigned long)
070275b4 00000060 T CTRPluginFramework::HookManager::FreeHook(unsigned long&)
07027614 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
07027614 00000038 T CTRPluginFramework::Scheduler::~Scheduler()
0702764c 00000038 T CTRPluginFramework::Scheduler::Core::Core()
0702764c 00000038 T CTRPluginFramework::Scheduler::Core::Core()
07027684 00000048 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
070276cc 0000010c T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
070277d8 000000d4 T CTRPluginFramework::Scheduler::Initialize()
070278ac 00000050 T CTRPluginFramework::Scheduler::Exit()
070278fc 00000048 T CTRPluginFramework::Scheduler::Scheduler()
070278fc 00000048 T CTRPluginFramework::Scheduler::Scheduler()
07027944 0000006c T CTRPluginFramework::Scheduler::_PollTask(unsigned long)
070279b0 000000d0 T CTRPluginFramework::Scheduler__CoreHandler(void*)
07027a80 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
07027ab0 0000001c t CTRPluginFramework::memcpy32(unsigned long*, unsigned long*, unsigned long)
07027acc 00000108 t CTRPluginFramework::CreateBMP(unsigned long, unsigned long)
07027bd4 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
07027bec 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07027bec 00000044 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07027c30 00000054 T CTRPluginFramework::ScreenImpl::Initialize()
07027c84 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
07027d64 00000138 T CTRPluginFramework::ScreenImpl::Acquire()
07027e9c 0000009c T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07027f38 00000030 T CTRPluginFramework::ScreenImpl::Copy()
07027f68 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07027f70 00000064 T CTRPluginFramework::ScreenToBMP_BGR8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07027fd4 00000064 T CTRPluginFramework::ScreenToBMP_RGBA8(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
07028038 00000070 T CTRPluginFramework::ScreenToBMP_RGB565(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
070280a8 00000074 T CTRPluginFramework::ScreenToBMP_RGB5A1(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702811c 00000070 T CTRPluginFramework::ScreenToBMP_RGBA4(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned char*, unsigned long, unsigned long)
0702818c 000000d0 T CTRPluginFramework::ScreenImpl::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long)
0702825c 000000c4 T CTRPluginFramework::ScreenImpl::Screenshot(int, CTRPluginFramework::BMPImage*)
07028320 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0702837c 000000a0 T CTRPluginFramework::ScreenImpl::Flush()
07028420 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
07028478 000000bc T CTRPluginFramework::ScreenImpl::Clean()
07028534 000000d8 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
0702860c 00000068 T CTRPluginFramework::ScreenImpl::ApplyFading()
07028674 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0702867c 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
07028684 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0702868c 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
070286a8 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
070286c4 00000058 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
0702871c 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
0702874c 0000005c T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
070287a8 00000078 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07028820 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07028844 00000004 t addrMapNodeDestructor(rbtree_node*)
07028848 00000130 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
07028978 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
07028980 00000070 T CTRPluginFramework::Heap::Free(void*)
070289f0 0000000c T CTRPluginFramework::Heap::SpaceFree()
070289fc 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
07028a2c 00000104 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07028b30 000001dc W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
07028d0c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07028d0c 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07028dd0 00000060 t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
07028e30 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07028e3c 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07028e7c 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07028e8c 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07028ea4 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07028eb8 00000004 T Kernel::Initialize()
07028ebc 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07028ed4 0000000c T KProcess::GetCurrent()
07028ee0 00000024 T KProcess::PatchCore2Access()
07028f04 0000002c T KProcess::PatchCategory(unsigned long)
07028f30 00000014 T KProcess__PatchCategory
07028f44 0000002c T KProcess::PatchMaxPriority(unsigned long)
07028f70 00000014 T KProcess__PatchMaxPriority
07028f84 00000084 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
07029008 00000034 t CTRPluginFramework::ThreadPredicate(KThread*)
0702903c 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702903c 00000020 W std::vector<MemInfo, std::allocator<MemInfo> >::~vector()
0702905c 000000e4 T CTRPluginFramework::ProcessImpl::Initialize()
07029140 00000018 T IsPaused
07029158 0000003c T CTRPluginFramework::ProcessImpl::Play(bool)
07029194 0000001c T CTRPluginFramework::ProcessImpl::LockGameThreads()
070291b0 0000001c T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
070291cc 00000068 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
07029234 0000007c T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
070292b0 0000009c T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0702934c 000000b0 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
070293fc 000000c8 W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
070294c4 000000d4 T CTRPluginFramework::ProcessImpl::UpdateMemRegions()
07029598 00000098 T CTRPluginFramework::ProcessImpl::Pause(bool)
07029630 0000005c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
0702968c 00000090 T CTRPluginFramework::EventManager::EventManager()
0702968c 00000090 T CTRPluginFramework::EventManager::EventManager()
0702971c 00000160 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0702987c 0000003c W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
070298b8 0000029c T CTRPluginFramework::EventManager::ProcessEvents()
07029b54 000000f8 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
07029c4c 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
07029c54 0000002c W MemBlock::Create(unsigned char*, unsigned long)
07029c80 00000034 W MemPool::DelBlock(MemBlock*)
07029cb4 0000005c T MemPool::CoalesceRight(MemBlock*)
07029d10 00000118 T MemPool::Allocate(MemChunk&, unsigned long, int)
07029e28 000000fc T MemPool::Deallocate(MemChunk const&)
07029f24 00000020 T MemPool::GetFreeSpace()
07029f44 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
07029f68 00000004 t addrMapNodeDestructor(rbtree_node*)
07029f6c 00000154 T vramMemAlign
0702a0c0 00000008 T vramAlloc
0702a0c8 00000070 T vramFree
0702a138 00000030 t _GLOBAL__sub_I_vramMemAlign
0702a168 000001d8 T threadCreate
0702a340 0000002c T threadFree
0702a36c 00000024 T threadJoin
0702a390 00000020 T threadGetCurrent
0702a3b0 0000003c T threadExit
0702a3ec 0000003c t _thread_begin
0702a428 00000050 T srvExit
0702a478 00000034 T srvRegisterClient
0702a4ac 00000064 T srvInit
0702a510 00000068 T srvGetServiceHandleDirect
0702a578 00000004 T srvGetServiceHandle
0702a57c 00000034 T srvPublishToSubscriber
0702a5b0 00000034 T errfExit
0702a5e4 00000058 T errfInit
0702a63c 0000003c T ERRF_Throw
0702a678 00000090 T ERRF_ExceptionHandler
0702a708 000000a8 T fontEnsureMapped
0702a7b0 00000110 T fontGlyphIndexFromCodePoint
0702a8c0 00000074 T fontGetCharWidthInfo
0702a934 0000000c T __sync_init
0702a940 00000018 T __sync_fini
0702a958 00000018 T LightLock_Init
0702a970 0000008c T LightLock_Lock
0702a9fc 00000034 T LightLock_TryLock
0702aa30 00000050 T LightLock_Unlock
0702aa80 00000018 T RecursiveLock_Init
0702aa98 00000030 T RecursiveLock_Lock
0702aac8 00000044 T RecursiveLock_TryLock
0702ab0c 00000034 T RecursiveLock_Unlock
0702ab40 00000030 T LightEvent_Init
0702ab70 00000060 T LightEvent_Clear
0702abd0 00000064 T LightEvent_Pulse
0702ac34 000000b4 T LightEvent_Signal
0702ace8 000000a8 T LightEvent_Wait
0702ad90 000000a0 T cfguInit
0702ae30 00000034 T cfguExit
0702ae64 00000044 T CFGU_GetConfigInfoBlk2
0702aea8 00000014 T CFGU_GetSystemLanguage
0702aebc 00000028 t fsSession
0702aee4 00000044 t fsSessionForArchive
0702af28 00000038 T fsExit
0702af60 00000028 T FSUSER_Initialize
0702af88 000000b0 T fsInit
0702b038 00000080 T FSUSER_OpenFile
0702b0b8 00000068 T FSUSER_DeleteFile
0702b120 000000a4 T FSUSER_RenameFile
0702b1c4 00000068 T FSUSER_DeleteDirectoryRecursively
0702b22c 00000080 T FSUSER_CreateFile
0702b2ac 00000070 T FSUSER_CreateDirectory
0702b31c 000000a4 T FSUSER_RenameDirectory
0702b3c0 0000006c T FSUSER_OpenDirectory
0702b42c 00000074 T FSUSER_OpenArchive
0702b4a0 00000058 T FSFILE_Read
0702b4f8 00000060 T FSFILE_Write
0702b558 00000038 T FSFILE_GetSize
0702b590 00000028 T FSFILE_SetSize
0702b5b8 0000003c T FSFILE_Close
0702b5f4 00000024 T FSFILE_Flush
0702b618 00000054 T FSDIR_Read
0702b66c 0000003c T FSDIR_Close
0702b6a8 00000104 T aptSendCommand
0702b7ac 0000006c T APT_CheckNew3DS
0702b818 00000048 T APT_GetSharedFont
0702b860 000000a0 T amInit
0702b900 00000034 T amExit
0702b934 00000088 T acInit
0702b9bc 00000034 T acExit
0702b9f0 000000bc T hidExit
0702baac 00000034 T hidCheckSectionUpdateTime
0702bae0 00000174 T hidScanInput
0702bc54 00000010 T hidKeysHeld
0702bc64 00000010 T hidKeysDown
0702bc74 00000010 T hidKeysUp
0702bc84 00000018 T hidTouchRead
0702bc9c 00000090 T HIDUSER_GetHandles
0702bd2c 00000174 T hidInit
0702bea0 000000e8 t gspEventThreadMain
0702bf88 000000a0 T gspInitEventHandler
0702c028 00000040 T gspExitEventHandler
0702c068 0000008c T gspExit
0702c0f4 0000005c T gspWaitForEvent
0702c150 00000064 T GSPGPU_RegisterInterruptRelayQueue
0702c1b4 000000dc T gspInit
0702c290 00000034 T irrstCheckSectionUpdateTime
0702c2c4 00000070 T irrstScanInput
0702c334 0000001c T irrstKeysHeld
0702c350 00000050 T IRRST_GetHandles
0702c3a0 00000034 T IRRST_Initialize
0702c3d4 00000128 T irrstInit
0702c4fc 0000002c T IRRST_Shutdown
0702c528 000000a8 T irrstExit
0702c5d0 00000028 t __ctru_get_reent
0702c5f8 000000ec T __system_initSyscalls
0702c6e4 000000ac T utf8_to_utf16
0702c790 00000138 T decode_utf8
0702c8c8 0000005c T decode_utf16
0702c924 000000d4 T utf16_to_utf8
0702c9f8 000000e0 T encode_utf8
0702cad8 00000054 T encode_utf16
0702cb2c 00000054 T rbtree_find
0702cb80 00000014 t is_black
0702cb94 000002bc T rbtree_remove
0702ce50 00000050 T rbtree_node_next
0702cea0 00000090 T rbtree_rotate
0702cf30 00000174 t do_insert
0702d0a4 00000008 T rbtree_insert
0702d0ac 00000010 T rbtree_init
0702d0bc T LoadCROHooked
0702d0d0 T AR__ExecuteRoutine
0702d0f8 t stackBak
0702d100 T svcCustomBackdoor
0702d108 T svcConvertVAToPA
0702d110 T svcFlushDataCacheRange
0702d118 T svcMapProcessMemoryEx
0702d12c T svcUnmapProcessMemoryEx
0702d134 T svcControlProcess
0702d13c T svcQueryMemory
0702d16c T svcCreateThread
0702d18c T svcExitThread
0702d194 T svcSleepThread
0702d19c T svcSetThreadPriority
0702d1a4 T svcCreateEvent
0702d1b8 T svcSignalEvent
0702d1c0 T svcClearEvent
0702d1c8 T svcMapMemoryBlock
0702d1d0 T svcUnmapMemoryBlock
0702d1d8 T svcCreateAddressArbiter
0702d1ec T svcArbitrateAddress
0702d204 T svcCloseHandle
0702d20c T svcWaitSynchronization
0702d214 T svcWaitSynchronizationN
0702d23c T svcGetSystemTick
0702d244 T svcGetSystemInfo
0702d25c T svcGetProcessInfo
0702d274 T svcConnectToPort
0702d288 T svcSendSyncRequest
0702d290 T svcOpenProcess
0702d2a4 T svcGetProcessId
0702d2b8 T svcBreak
0702d2c0 T svcInvalidateProcessDataCache
0702d2c8 T svcFlushProcessDataCache
0702d2d0 T svcKernelSetState
0702d2d8 T svcQueryProcessMemory
0702d2fc 00000030 t CTRPluginFramework::GetCurrentTime()
0702d32c 00000014 T CTRPluginFramework::Clock::Clock()
0702d32c 00000014 T CTRPluginFramework::Clock::Clock()
0702d340 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
0702d340 00000008 T CTRPluginFramework::Clock::Clock(CTRPluginFramework::Time)
0702d348 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
0702d380 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
0702d3b0 00000044 T CTRPluginFramework::Clock::Restart()
0702d3f4 00000014 T CTRPluginFramework::Touch::IsDown()
0702d408 00000028 T CTRPluginFramework::Touch::GetPosition()
0702d430 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0702d430 00000084 T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0702d4b4 00000048 T CTRPluginFramework::Task::~Task()
0702d4b4 00000048 T CTRPluginFramework::Task::~Task()
0702d4fc 00000030 T CTRPluginFramework::Task::Start() const
0702d52c 00000044 T CTRPluginFramework::Task::Wait() const
0702d570 00000014 T CTRPluginFramework::Task::Status() const
0702d584 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0702d584 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
0702d5ac 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
0702d62c 00000048 T CTRPluginFramework::LineWriter::Flush()
0702d674 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0702d674 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0702d690 0000006c T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702d6fc 00000018 T CTRPluginFramework::LineWriter::Close()
0702d714 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702d7d8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.22]
0702d850 0000033c T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0702db8c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0702db8c 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0702dbac 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702dc34 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702dc34 0000012c T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0702dd60 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
0702dd9c 00000100 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702de9c 00000084 T CTRPluginFramework::ARCode::Update()
0702df20 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702df20 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
0702df44 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0702df6c 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702df6c 000000b8 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0702e024 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702e024 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0702e058 00000040 T CTRPluginFramework::ARCodeContext::Update()
0702e098 00000090 T CTRPluginFramework::ARCodeContext::Clear()
0702e128 000000d8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0702e200 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0702e200 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0702e220 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.67]
0702e238 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702e32c 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.71]
0702e348 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702e45c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702e46c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.93]
0702e4e4 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0702e4fc 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0702e550 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e594 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e5dc 000004d4 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0702eab0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702eab0 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702eaf4 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0702eaf4 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
0702eb08 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0702eb28 00000178 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0702eca0 00000124 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0702edc4 00000734 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0702f4f8 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0702f548 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702f548 00000068 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702f5b0 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702f5cc 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f5cc 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702f618 0000011c T CTRPluginFramework::MenuEntryActionReplay::Update()
0702f734 00000090 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0702f7c4 00000118 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0702f8dc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.94]
0702f964 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0702f9c0 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0702f9c0 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0702fa38 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702fa38 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0702fa38 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702fa38 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0702fa88 00001354 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
07030ddc 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07030ddc 00000194 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07030f70 000002b4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07031224 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
070312ac 00000044 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070312f0 00000014 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07031304 0000003c W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
07031340 00000168 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
070314a8 0000003c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
070314e4 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07031548 00000024 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0703156c 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
07031594 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
07031594 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
070315bc 00000380 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0703193c 00000684 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07031fc0 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0703200c 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
070320c4 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07032538 000004cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07032a04 000000f8 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07032afc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.44]
07032b84 0000003c t RegBlock* std::__uninitialized_move_if_noexcept_a<RegBlock*, RegBlock*, std::allocator<RegBlock> >(RegBlock*, RegBlock*, RegBlock*, std::allocator<RegBlock>&) [clone .isra.48]
07032bc0 00000324 T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
07032ee4 0000007c T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
07032f60 0000006c T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
07032fcc 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07033004 0000007c T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
07033080 000003cc T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0703344c 00000204 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
07033650 000000a0 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
070336f0 000000bc T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
070337ac 000000bc T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
07033868 000000ac T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
07033914 0000008c T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
070339a0 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
07033b18 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
07033c2c 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
07033cd4 00000068 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
07033d3c 00000090 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
07033dcc 00000160 T ARM_Disasm::Decode01(unsigned long)
07033f2c 00000028 T ARM_Disasm::Decode10(unsigned long)
07033f54 0000007c T ARM_Disasm::Decode11(unsigned long)
07033fd0 00000068 T ARM_Disasm::DecodeMUL(unsigned long)
07034038 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
07034088 00000118 T ARM_Disasm::DecodeALU(unsigned long)
070341a0 000000c4 T ARM_Disasm::Decode00(unsigned long)
07034264 00000030 T ARM_Disasm::Decode(unsigned long)
07034294 000000d8 W void std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&)
0703436c 000002e4 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
07034650 000002f0 T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
07034940 00000020 T CTRPluginFramework::Button::~Button()
07034940 00000020 T CTRPluginFramework::Button::~Button()
07034960 0000001c T CTRPluginFramework::Button::~Button()
0703497c 00000040 T CTRPluginFramework::Button::operator()()
070349bc 00000148 T CTRPluginFramework::Button::Draw()
07034b04 00000154 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07034c58 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07034c58 00000124 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07034d7c 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07034d7c 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07034d9c 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07034d9c 00000094 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07034e30 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07034e30 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07034e44 00000018 T CTRPluginFramework::Button::Enable(bool)
07034e5c 00000010 T CTRPluginFramework::Button::Enable()
07034e6c 00000010 T CTRPluginFramework::Button::Disable()
07034e7c 00000010 T CTRPluginFramework::Button::Lock()
07034e8c 00000010 T CTRPluginFramework::Button::Execute()
07034e9c 00000018 T CTRPluginFramework::Button::SetState(bool)
07034eb4 00000010 T CTRPluginFramework::Button::GetState() const
07034ec4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07034ec4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07034ed8 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07034ed8 00000020 T CTRPluginFramework::UIContainer::~UIContainer()
07034ef8 00000024 T CTRPluginFramework::UIContainer::Draw()
07034f1c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07034f50 000000c4 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07035014 00000040 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07035054 00000094 T CTRPluginFramework::ComboBox::Draw()
070350e8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
070350e8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
07035134 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
07035150 000000a8 T CTRPluginFramework::ComboBox::operator()()
070351f8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070351f8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07035244 0000003c T CTRPluginFramework::ComboBox::Clear()
07035280 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070352d0 00000084 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07035354 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07035354 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07035358 00000014 T CTRPluginFramework::FloatingButton::Draw()
0703536c 00000014 T CTRPluginFramework::FloatingButton::operator()()
07035380 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
07035394 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07035554 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035554 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07035594 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07035594 000000c0 T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07035654 0000009c T CTRPluginFramework::TouchKeyString::Draw()
070356f0 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07035790 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
070357a8 00000030 T CTRPluginFramework::TouchKeyString::operator()()
070357d8 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07035878 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07035878 000000b0 T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07035928 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07035928 000000ac T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
070359d4 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
070359d4 00000080 T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07035a54 00000040 T CTRPluginFramework::TouchKey::Clear()
07035a94 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07035a94 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07035ab4 0000001c T CTRPluginFramework::TouchKey::~TouchKey()
07035ad0 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07035ad8 00000060 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07035b38 00000060 T CTRPluginFramework::TouchKey::Draw()
07035b98 0000009c T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07035c34 000000c4 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07035cf8 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07035cf8 00000150 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07035e48 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07035e48 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07035e68 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07035e84 0000007c T CTRPluginFramework::NumericTextBox::Draw()
07035f00 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
07035f38 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07035fa0 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
07036098 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
070360a8 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
070360b8 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
070360c0 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070360cc 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070360cc 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07036134 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070361a8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.28]
07036220 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
07036220 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0703626c 000000c0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0703632c 00000138 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
07036464 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0703648c 00000310 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0703679c 000000f4 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
07036890 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
07036ad8 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
07036e04 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.32]
07036e8c 00000098 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.40]
07036f24 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07036fa0 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
07037054 0000018c T CTRPluginFramework::SearchMenu::_Edit()
070371e0 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
07037228 00000148 T CTRPluginFramework::SearchMenu::_Export()
07037370 00000158 T CTRPluginFramework::SearchMenu::_ExportAll()
070374c8 000000e4 T CTRPluginFramework::SearchMenu::_ShowGame()
070375ac 00000030 W std::__cxx11::to_string(unsigned long)
070375dc 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
070375dc 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07037690 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07037714 00000548 T CTRPluginFramework::SearchMenu::Draw()
07037c5c 00000230 T CTRPluginFramework::SearchMenu::Update()
07037e8c 00000510 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0703839c 000000e4 T CTRPluginFramework::Converter::Converter()
0703839c 000000e4 T CTRPluginFramework::Converter::Converter()
07038480 00000010 T CTRPluginFramework::Converter::Instance()
07038490 00000108 T CTRPluginFramework::Converter::_Draw()
07038598 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
07038598 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
070385ac 0000021c T CTRPluginFramework::Converter::operator()(unsigned long)
070387c8 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07038c4c 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070390d4 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07039550 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07039b78 0000090c T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703a484 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703ad94 000008d4 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703b668 00000c40 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703c2a8 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703cb4c 0000093c T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703d488 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703ddac 00000d9c T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703eb48 00000c64 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703f7ac 00000744 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0703fef0 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070402f8 000006e0 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070409d8 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07040c68 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07040f10 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070411a0 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
070411d4 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070414f8 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0704151c 00000004 t addrMapNodeDestructor(rbtree_node*)
07041520 000000d8 T mappableAlloc
070415f8 00000050 T mappableFree
07041648 00000090 T __system_allocateHeaps
070416d8 0000005c t getSysTime
07041738 000000fc T __libctru_gtod
07041834 00000008 T envGetHandle
0704183c 00000004 T envDestroyHandles
07041840 00000020 T __libctru_exit
07041860 00000020 T __appExit
07041880 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07041880 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
070418ac 00000018 T CTRPluginFramework::LineReader::~LineReader()
070418ac 00000018 T CTRPluginFramework::LineReader::~LineReader()
070418c4 00000108 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070419cc 00000060 t CTRPluginFramework::Hook* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook> >(CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, CTRPluginFramework::Hook*, std::allocator<CTRPluginFramework::Hook>&) [clone .isra.55]
07041a2c 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
07041a34 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
07041a58 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
07041a7c 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
07041aa0 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
07041ac8 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
07041af0 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
07041b18 000000d0 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
07041be8 00001e74 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
07043a5c 00000070 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
07043acc 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
07043aec 00000008 T __cxa_pure_virtual
07043af4 00000010 T __aeabi_atexit
07043b04 00000004 T operator new[](unsigned int)
07043b08 00000058 T operator new(unsigned int)
07043b60 00000034 T __cxxabiv1::__terminate(void (*)())
07043b94 00000018 T std::terminate()
07043bac 0000000c T __cxxabiv1::__unexpected(void (*)())
07043bb8 00000018 T std::unexpected()
07043bd0 00000014 T std::get_terminate()
07043be4 00000014 T std::get_unexpected()
07043bf8 0000000c T std::bad_alloc::what() const
07043c04 00000020 T std::bad_alloc::~bad_alloc()
07043c04 00000020 T std::bad_alloc::~bad_alloc()
07043c24 0000002c T std::bad_alloc::~bad_alloc()
07043c50 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07043db8 00000068 t base_of_encoded_value(unsigned char, _Unwind_Context*)
07043e20 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07043ef8 000006f4 T __gxx_personality_v0
070445ec 00000004 T operator delete[](void*)
070445f0 00000014 T std::get_new_handler()
07044604 0000005c T __cxa_guard_acquire
07044660 0000000c T __cxa_guard_release
0704466c 00000004 T std::exception::~exception()
0704466c 00000004 T std::exception::~exception()
07044670 00000004 T std::bad_exception::~bad_exception()
07044670 00000004 T std::bad_exception::~bad_exception()
07044674 0000000c T transaction clone for std::exception::what() const
07044674 0000000c T std::exception::what() const
07044680 0000000c T transaction clone for std::bad_exception::what() const
07044680 0000000c T std::bad_exception::what() const
0704468c 00000018 T std::bad_exception::~bad_exception()
070446a4 00000004 T operator delete(void*, unsigned int)
070446a8 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07044708 00000070 T __cxa_init_primary_exception
07044778 00000054 T __cxa_throw
070447cc 000000b0 T __cxa_rethrow
0704487c 000000cc T __cxa_begin_catch
07044948 000000e0 T __cxa_end_catch
07044a28 000000ec t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
07044b14 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
07044bc8 00000044 T __cxa_allocate_exception
07044c0c 00000030 T __cxa_free_exception
07044c3c 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
07044c7c 00000004 T operator delete(void*)
07044c80 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07044c80 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07044ca0 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07044ccc 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07044d38 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07044e14 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07044e58 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07044e70 00000014 T std::__detail::_List_node_base::_M_unhook()
07044e84 0000002c T std::__throw_bad_alloc()
07044eb0 00000040 T std::__throw_logic_error(char const*)
07044ef0 00000040 T std::__throw_invalid_argument(char const*)
07044f30 00000040 T std::__throw_length_error(char const*)
07044f70 00000040 T std::__throw_out_of_range(char const*)
07044fb0 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
0704502c 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07045080 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07045094 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
070450b8 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
070450dc 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045194 0000010c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
070452a0 0000007c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
0704531c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0704531c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07045388 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
07045388 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
070453ac 000000cc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07045478 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
07045588 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
070455f8 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
07045664 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
070456a8 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
070456c0 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
070457e4 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char)
0704581c 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07045aa4 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
07045adc 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045b28 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
07045b88 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07045c1c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045c2c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045c3c 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07045c68 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07045cb0 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
07045cf8 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07045d9c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
07045dac 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
07045e10 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
07045e40 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
07045e8c 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
07045f3c 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045f3c 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045f6c 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
07045fe4 T __cxa_end_cleanup
07045ff4 00000138 T __cxa_type_match
0704612c 000000b4 T __cxa_begin_cleanup
070461e0 000000b4 T __gnu_end_cleanup
07046294 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07046304 0000002c T __cxa_call_terminate
07046330 00000158 T __cxa_call_unexpected
07046488 0000000c T __cxa_get_globals_fast
07046494 0000000c T __cxa_get_globals
070464a0 00000004 T std::type_info::~type_info()
070464a0 00000004 T std::type_info::~type_info()
070464a4 00000008 T std::type_info::__is_pointer_p() const
070464a4 00000008 T std::type_info::__is_function_p() const
070464ac 0000004c T std::type_info::operator==(std::type_info const&) const
070464f8 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07046554 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07046568 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07046568 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07046588 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
070465b4 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0704661c 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07046648 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0704668c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0704668c 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
070466ac 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
070466d8 00000008 T std::logic_error::what() const
070466e0 00000064 T std::logic_error::~logic_error()
070466e0 00000064 T std::logic_error::~logic_error()
07046744 0000001c T std::logic_error::~logic_error()
07046760 00000020 T std::invalid_argument::~invalid_argument()
07046760 00000020 T std::invalid_argument::~invalid_argument()
07046780 00000028 T std::invalid_argument::~invalid_argument()
070467a8 00000020 T std::length_error::~length_error()
070467a8 00000020 T std::length_error::~length_error()
070467c8 00000028 T std::length_error::~length_error()
070467f0 00000020 T std::out_of_range::~out_of_range()
070467f0 00000020 T std::out_of_range::~out_of_range()
07046810 00000028 T std::out_of_range::~out_of_range()
07046838 00000038 T std::logic_error::logic_error(char const*)
07046838 00000038 T std::logic_error::logic_error(char const*)
07046870 00000020 T std::invalid_argument::invalid_argument(char const*)
07046870 00000020 T std::invalid_argument::invalid_argument(char const*)
07046890 00000020 T std::length_error::length_error(char const*)
07046890 00000020 T std::length_error::length_error(char const*)
070468b0 00000020 T std::out_of_range::out_of_range(char const*)
070468b0 00000020 T std::out_of_range::out_of_range(char const*)
070468d0 0000006c T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
0704693c 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
070469bc 000000f8 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
07046ab4 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
07046b38 00000070 t char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.20]
07046b38 00000070 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.23]
07046ba8 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
07046bac 00000030 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
07046bdc 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
07046bdc 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
07046c20 000002bc T log2
07046edc 00000024 t with_errno
07046f00 00000048 T __math_divzero
07046f48 0000001c T __math_invalid
07046f68 0000015c T ceil
070470c4 000000b4 T ceilf
07047178 0000016c T floor
070472e4 00000088 T roundf
0704736c 0000002c T __aeabi_f2lz
0704736c 0000002c T __fixsfdi
07047398 0000002c T __aeabi_d2lz
07047398 0000002c T __fixdfdi
070473c8 00000040 T __aeabi_f2ulz
070473c8 00000040 T __fixunssfdi
07047408 00000040 T __aeabi_d2ulz
07047408 00000040 T __fixunsdfdi
07047448 00000128 T __udivmoddi4
07047570 00000018 t selfrel_offset31
07047588 00000094 t search_EIT_table
0704761c 00000040 t __gnu_unwind_get_pr_addr
0704765c 0000011c t get_eit_entry
07047778 00000088 t restore_non_core_regs
07047800 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
07047814 00000004 t _Unwind_DebugHook
07047818 00000064 t unwind_phase2
0704787c 0000014c t unwind_phase2_forced
070479c8 000000a4 T __gnu_Unwind_RaiseException
07047a6c 00000024 T __gnu_Unwind_ForcedUnwind
07047a90 00000074 T __gnu_Unwind_Resume
07047b04 00000020 T __gnu_Unwind_Resume_or_Rethrow
07047b24 00000004 T _Unwind_Complete
07047b28 00000018 T _Unwind_DeleteException
07047b40 00000054 T _Unwind_VRS_Get
07047b94 0000002c t _Unwind_GetGR
07047bc0 00000054 T _Unwind_VRS_Set
07047c14 0000002c t _Unwind_SetGR
07047c40 000000c0 T __gnu_Unwind_Backtrace
07047d00 00000448 t __gnu_unwind_pr_common
07048148 00000008 T __aeabi_unwind_cpp_pr0
07048150 00000008 W __aeabi_unwind_cpp_pr1
07048158 00000008 W __aeabi_unwind_cpp_pr2
07048160 000003dc T _Unwind_VRS_Pop
0704853c 00000060 t next_unwind_byte
0704859c 0000002c t _Unwind_GetGR.constprop.0
070485c8 00000004 t unwind_UCB_from_context
070485cc 000003c8 T __gnu_unwind_execute
07048994 00000048 T __gnu_unwind_frame
070489dc 00000010 T _Unwind_GetRegionStart
070489ec 0000001c T _Unwind_GetLanguageSpecificData
07048a08 00000008 T _Unwind_GetDataRelBase
07048a10 00000008 T _Unwind_GetTextRelBase
07048a18 00000010 T ctime
07048a28 00000014 T __cxa_atexit
07048a3c 0000000c T __errno
07048a48 0000007c T __libc_init_array
07048ac4 00000018 T isspace
07048adc 00000018 T isxdigit
07048af4 0000001c T localtime
07048b10 00000378 T localtime_r
07048e88 00000020 T memalign
07048ea8 0000014c T _memalign_r
07048ff4 00000018 T malloc
0704900c 00000018 T free
07049024 000007d8 T _malloc_r
070497fc 00000100 T memchr
070498fc 000000fc T memcmp
070499f8 00000118 T memcpy
07049b10 00000154 T memmove
07049c64 00000114 T memset
07049d78 0000000c T __malloc_lock
07049d84 0000000c T __malloc_unlock
07049d90 000000d4 T snprintf
07049e64 00000064 T sprintf
07049ec8 00000008 T __seofread
07049ed0 00000154 t iso_year_adjust
0704a024 00001138 t __strftime
0704b15c 00000020 T strftime
0704b17c 0000005c T strlen
0704b1d8 0000010c T strncmp
0704b2e4 000000e0 T strncpy
0704b3c4 00000054 t sulp
0704b418 000013c4 T _strtod_l
0704c7e0 000000bc T strtof
0704c8a0 0000025c t _strtoull_l.isra.0
0704cafc 00000004 T _strtoull_r
0704cb00 000001d0 t _strtoul_l.isra.0
0704ccd0 00000004 T _strtoul_r
0704ccd4 00000028 T strtoul
0704ccfc 00000620 t get_arg
0704d320 000035c0 T _svfprintf_r
070508e0 0000003c T time
0705091c 00000224 T __tzcalc_limits
07050b40 0000000c T __tz_lock
07050b4c 0000000c T __tz_unlock
07050b58 00000010 T _tzset_unlocked
07050b68 0000046c T _tzset_unlocked_r
07050fd4 000000a4 T _vsnprintf_r
07051078 00000038 T vsnprintf
070510b0 00000054 T _wcrtomb_r
07051104 00000020 T _wcsrtombs_r
07051124 0000000c T abs
07051130 0000001c T asctime
0705114c 00000078 T asctime_r
070511c4 000000b0 T __register_exitproc
07051274 000001c8 t quorem
07051440 000012ec T _dtoa_r
0705272c 000000f8 T _malloc_trim_r
07052824 000002e4 T _free_r
07052b08 000000ec t rshift
07052bf4 00000828 T __gethex
0705341c 00000060 T __match
0705347c 00000254 T __hexnan
070536d0 000000c8 T _findenv_r
07053798 00000018 T _getenv_r
070537b0 0000000c T __gettzinfo
070537bc 0000027c T gmtime_r
07053a38 0000000c T labs
07053a44 0000000c T _localeconv_r
07053a50 00000010 T __locale_mb_cur_max
07053a60 000002fc T __utf8_mbtowc
07053d5c 00000088 T _Balloc
07053de4 0000001c T _Bfree
07053e00 000000e0 T __multadd
07053ee0 000000e4 T __s2b
07053fc4 00000058 T __hi0bits
0705401c 0000009c T __lo0bits
070540b8 00000020 T __i2b
070540d8 000001c4 T __multiply
0705429c 00000100 T __pow5mult
0705439c 000000f4 T __lshift
07054490 0000005c T __mcmp
070544ec 00000168 T __mdiff
07054654 00000074 T __ulp
070546c8 000000d4 T __b2d
0705479c 00000100 T __d2b
0705489c 00000084 T __ratio
07054920 0000006c T __copybits
0705498c 00000078 T __any_on
07054a04 0000000c T nanf
07054a10 000000a8 T frexp
07054ab8 00000064 T siprintf
07054b1c 00000074 T siscanf
07054b90 00000010 T nan
07054ba0 000000d4 T sniprintf
07054c74 000000f0 T strcpy
07054d64 000001bc t _strtol_l.isra.0
07054f20 00000004 T _strtol_r
07054f24 00000620 t get_arg
07055544 00000188 T __ssprint_r
070556cc 0000248c T _svfiprintf_r
07057b58 00000048 t get_arg
07057ba0 000000e4 T _sungetc_r
07057c84 0000006c T __ssrefill_r
07057cf0 000000c8 T _sfread_r
07057db8 00002234 T __ssvfiscanf_r
07059fec 000000a4 T __submore
0705a090 00000184 T _wcsnrtombs_l
0705a214 0000004c T _wcsnrtombs_r
0705a260 000000e8 T __utf8_wctomb
0705a348 00000094 T _calloc_r
0705a3dc 0000000c T __env_lock
0705a3e8 0000000c T __env_unlock
0705a3f4 00000008 T iswspace
0705a3fc 00000060 T _mbrtowc_r
0705a45c 00000020 T realloc
0705a47c 000004bc T _realloc_r
0705a938 000000cc T __sccl
0705aa04 0000025c t _strtoll_l.isra.0
0705ac60 00000004 T _strtoll_r
0705ac64 0000003c T iswspace_l
0705aca0 000001e0 t __jp2uc
0705ae80 00000094 T _jp2uc_l
0705af14 00000084 T category
0705af98 0000002c T _gettimeofday_r
0705afc4 00000070 T _sbrk_r
0705b034 00000018 T __libc_lock_acquire
0705b04c 00000018 T __libc_lock_release
0705b064 00000018 T __libc_lock_acquire_recursive
0705b07c 00000018 T __libc_lock_release_recursive
0705b094 00000028 T __getreent
0705b0bc T _fini
0705b0d4 00000030 r ._192
0705b104 00000020 r ._188
0705b124 00000038 r ._189
0705b15c 00000048 r ._190
0705b1a4 00000038 r ._191
0705b218 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0705b238 00000a00 r font
0705bc38 0000001c R vtable for CTRPluginFramework::TextBox
0705bc74 00000058 r CTRPluginFramework::g_OSDPattern
0705bcfc 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
0705bd10 00000038 r CTRPluginFramework::stable
0705bd48 00000038 r CTRPluginFramework::ktable
0705bd80 00000048 r CTRPluginFramework::g_ctrpf
0705bdc8 00000030 r CTRPluginFramework::g_byme
0705be24 00000018 R vtable for CTRPluginFramework::HexEditor::ByteView
0705be3c 00000018 R vtable for CTRPluginFramework::HexEditor::IntegerView
0705be54 00000018 R vtable for CTRPluginFramework::HexEditor::FloatView
0705be6c 00000018 R vtable for CTRPluginFramework::HexEditor::AsmView
0705be84 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0705be8c 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0705bea8 00000038 R vtable for CTRPluginFramework::Search
0705bee0 00000038 R vtable for CTRPluginFramework::Search32
0705bf18 00000005 r CSWTCH.74
0705bf20 00000004 R Search15_array_length
0705bf24 00000384 r Search15_array
0705c2a8 00000004 R UnCheckedCheckbox_array_length
0705c2ac 00000384 r UnCheckedCheckbox_array
0705c630 00000004 R Unsplash15_array_length
0705c634 00000384 r Unsplash15_array
0705c9b8 00000004 R Plus25_array_length
0705c9bc 000009c4 r Plus25_array
0705d380 00000004 R GameControllerFilled25_array_length
0705d384 000009c4 r GameControllerFilled25_array
0705dd48 00000004 R About15_array_length
0705dd4c 00000384 r About15_array
0705e0d0 00000004 R Trash25_array_length
0705e0d4 000009c4 r Trash25_array
0705ea98 00000004 R Cut25_array_length
0705ea9c 000009c4 r Cut25_array
0705f460 00000004 R CloseWindow20_array_length
0705f464 00000640 r CloseWindow20_array
0705faa4 00000004 R AddFavoriteFilled25_array_length
0705faa8 000009c4 r AddFavoriteFilled25_array
0706046c 00000004 R ClearSymbolFilled15_array_length
07060470 00000384 r ClearSymbolFilled15_array
070607f4 00000004 R ClipboardFilled25_array_length
070607f8 000009c4 r ClipboardFilled25_array
070611bc 00000004 R CheckedCheckbox_array_length
070611c0 00000384 r CheckedCheckbox_array
07061544 00000004 R CutFilled25_array_length
07061548 000009c4 r CutFilled25_array
07061f0c 00000004 R CapsLockOn15_array_length
07061f10 00000384 r CapsLockOn15_array
07062294 00000004 R TrashFilled25_array_length
07062298 000009c4 r TrashFilled25_array
07062c5c 00000004 R RAM15_array_length
07062c60 00000384 r RAM15_array
07062fe4 00000004 R More15_array_length
07062fe8 00000384 r More15_array
0706336c 00000004 R InfoFilled25_array_length
07063370 000009c4 r InfoFilled25_array
07063d34 00000004 R CloseWindowFilled20_array_length
07063d38 00000640 r CloseWindowFilled20_array
07064378 00000004 R HandCursor15_array_length
0706437c 00000384 r HandCursor15_array
07064700 00000004 R EnterKey15_array_length
07064704 00000384 r EnterKey15_array
07064a88 00000004 R Duplicate25_array_length
07064a8c 000009c4 r Duplicate25_array
07065450 00000004 R Settings15_array_length
07065454 00000384 r Settings15_array
070657d8 00000004 R File15_array_length
070657dc 00000384 r File15_array
07065b60 00000004 R AddFavorite25_array_length
07065b64 000009c4 r AddFavorite25_array
07066528 00000004 R Edit25_array_length
0706652c 000009c4 r Edit25_array
07066ef0 00000004 R DuplicateFilled25_array_length
07066ef4 000009c4 r DuplicateFilled25_array
070678b8 00000004 R Save25_array_length
070678bc 000009c4 r Save25_array
07068280 00000004 R Clipboard25_array_length
07068284 000009c4 r Clipboard25_array
07068c48 00000004 R Info25_array_length
07068c4c 000009c4 r Info25_array
07069610 00000004 R EditFilled25_array_length
07069614 000009c4 r EditFilled25_array
07069fd8 00000004 R KeyboardFilled25_array_length
07069fdc 000009c4 r KeyboardFilled25_array
0706a9a0 00000004 R PlusFilled25_array_length
0706a9a4 000009c4 r PlusFilled25_array
0706b368 00000004 R Shutdown15_array_length
0706b36c 00000384 r Shutdown15_array
0706b6f0 00000004 R ClearSymbol15_array_length
0706b6f4 00000384 r ClearSymbol15_array
0706ba78 00000004 R Maintenance15_array_length
0706ba7c 00000384 r Maintenance15_array
0706be00 00000004 R Controller15_array_length
0706be04 00000384 r Controller15_array
0706c188 00000004 R Grid15_array_length
0706c18c 00000384 r Grid15_array
0706c510 00000004 R Keyboard25_array_length
0706c514 000009c4 r Keyboard25_array
0706ced8 00000004 R CapsLockOnFilled15_array_length
0706cedc 00000384 r CapsLockOnFilled15_array
0706d260 00000004 R UserManualFilled15_array_length
0706d264 00000384 r UserManualFilled15_array
0706d5e8 00000004 R Rocket40_array_length
0706d5ec 00001900 r Rocket40_array
0706eeec 00000004 R Star15_array_length
0706eef0 00000384 r Star15_array
0706f274 00000004 R EnterKeyFilled15_array_length
0706f278 00000384 r EnterKeyFilled15_array
0706f5fc 00000004 R GameController25_array_length
0706f600 000009c4 r GameController25_array
0706ffc4 00000004 R FolderFilled_array_length
0706ffc8 00000384 r FolderFilled_array
0707034c 00000004 R Restart15_array_length
07070350 00000384 r Restart15_array
07070704 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
07070720 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
0707072c 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
070707ac 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
070707c0 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
070707c8 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
070707d0 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
070707d8 00000040 r RegNames
07070818 00000040 r cond_names
07070858 00000010 r shift_names
07070868 0000001c R vtable for CTRPluginFramework::Button
07070884 0000001c R vtable for CTRPluginFramework::ComboBox
070708a0 0000001c R vtable for CTRPluginFramework::FloatingButton
070708bc 0000001c R vtable for CTRPluginFramework::TouchKey
070708d8 0000001c R vtable for CTRPluginFramework::NumericTextBox
070720b4 00000014 V vtable for CTRPluginFramework::MenuItem
0707278c 0000001c V vtable for CTRPluginFramework::MenuEntryTools
07073b54 0000000c R typeinfo for std::bad_alloc
07073b60 0000000d R typeinfo name for std::bad_alloc
07073b70 00000014 R vtable for std::bad_alloc
07073ba8 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07073bb0 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07073bb8 0000000c R typeinfo for std::bad_exception
07073bc4 00000008 R typeinfo for std::exception
07073bcc 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07073bec 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
07073c10 00000012 R typeinfo name for std::bad_exception
07073c24 0000000d R typeinfo name for std::exception
07073c34 00000014 R vtable for std::bad_exception
07073c48 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
07073c54 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
07073c7c 0000002c R vtable for __cxxabiv1::__si_class_type_info
07073dd8 00000008 R typeinfo for std::type_info
07073de0 0000000d R typeinfo name for std::type_info
07073df0 0000000c R typeinfo for __cxxabiv1::__class_type_info
07073dfc 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07073e20 0000002c R vtable for __cxxabiv1::__class_type_info
07073e4c 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07073e58 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07073e7c 00000014 R vtable for __gnu_cxx::recursive_init_error
07073e90 0000000c R typeinfo for std::logic_error
07073e9c 0000000c R typeinfo for std::length_error
07073ea8 0000000c R typeinfo for std::out_of_range
07073eb4 0000000c R typeinfo for std::invalid_argument
07073ec0 00000010 R typeinfo name for std::logic_error
07073ed0 00000011 R typeinfo name for std::length_error
07073ee4 00000011 R typeinfo name for std::out_of_range
07073ef8 00000015 R typeinfo name for std::invalid_argument
07073f10 00000014 R vtable for std::logic_error
07073f24 00000014 R vtable for std::length_error
07073f38 00000014 R vtable for std::out_of_range
07073f4c 00000014 R vtable for std::invalid_argument
07074020 00000890 R __log2_data
070748b0 00000004 R _global_impure_ptr
070748b4 00000060 R __month_lengths
070749a0 00000014 r fpi.7554
070749b4 00000014 r fpinan.7590
070749c8 00000028 r tinytens
07074a2c 00000010 r blanks.8740
07074a3c 00000010 r zeroes.8741
07074a4c 000000fc R _C_time_locale
07074d14 00000015 r day_name.6253
07074d2c 00000024 r mon_name.6254
07074d50 00000101 R _ctype_
07074e68 00000100 R __hexdig
07074f68 0000000c R _C_numeric_locale
07074fc0 00000028 R __mprec_bigtens
07074fe8 000000c8 R __mprec_tens
070750b0 0000000c r p05.7474
070750bc 0000006c R __action_table
07075128 00000100 R __chclass
07075228 0000006c R __state_table
07075294 00000010 r blanks.8719
070752a4 00000010 r zeroes.8720
070752b4 00000022 r basefix.8286
070752ec 000000bc r a1
070753a8 000000bc r a2
07075464 0000005b r a3
070754c0 00000070 r a6
07075530 000000a2 r a7
070755d4 00000040 r a8
07075614 0000172a r b02cf
07076d40 00001a7c r d02f4
070787bc 0000309c r categories
0707b96c R __exidx_start
0707bc24 R __exidx_end
0707bc24 00000001 D CTRPluginFramework::g_keepRunning
0707bc28 00000004 D CTRPluginFramework::FwkSettings::Header
0707bc2c 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
0707bc30 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
0707bc34 00000004 D CTRPluginFramework::Preferences::ScreenshotKeys
0707bc38 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
0707bc3c 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
0707bc40 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
0707bc44 00000004 D CTRPluginFramework::Screenshot::Screens
0707bc48 00000004 D CTRPluginFramework::Screenshot::Hotkeys
0707bc4c 00000001 D CTRPluginFramework::SystemImpl::Language
0707bc4d 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
0707bc50 00000004 D Search15
0707bc54 00000004 D UnCheckedCheckbox
0707bc58 00000004 D Unsplash15
0707bc5c 00000004 D Plus25
0707bc60 00000004 D GameControllerFilled25
0707bc64 00000004 D About15
0707bc68 00000004 D Trash25
0707bc6c 00000004 D Cut25
0707bc70 00000004 D CloseWindow20
0707bc74 00000004 D AddFavoriteFilled25
0707bc78 00000004 D ClearSymbolFilled15
0707bc7c 00000004 D ClipboardFilled25
0707bc80 00000004 D CheckedCheckbox
0707bc84 00000004 D CutFilled25
0707bc88 00000004 D CapsLockOn15
0707bc8c 00000004 D TrashFilled25
0707bc90 00000004 D RAM15
0707bc94 00000004 D More15
0707bc98 00000004 D InfoFilled25
0707bc9c 00000004 D CloseWindowFilled20
0707bca0 00000004 D HandCursor15
0707bca4 00000004 D EnterKey15
0707bca8 00000004 D Duplicate25
0707bcac 00000004 D Settings15
0707bcb0 00000004 D File15
0707bcb4 00000004 D AddFavorite25
0707bcb8 00000004 D Edit25
0707bcbc 00000004 D DuplicateFilled25
0707bcc0 00000004 D Save25
0707bcc4 00000004 D Clipboard25
0707bcc8 00000004 D Info25
0707bccc 00000004 D EditFilled25
0707bcd0 00000004 D KeyboardFilled25
0707bcd4 00000004 D PlusFilled25
0707bcd8 00000004 D Shutdown15
0707bcdc 00000004 D ClearSymbol15
0707bce0 00000004 D Maintenance15
0707bce4 00000004 D Controller15
0707bce8 00000004 D Grid15
0707bcec 00000004 D Keyboard25
0707bcf0 00000004 D CapsLockOnFilled15
0707bcf4 00000004 D UserManualFilled15
0707bcf8 00000004 D Rocket40
0707bcfc 00000004 D Star15
0707bd00 00000004 D EnterKeyFilled15
0707bd04 00000004 D GameController25
0707bd08 00000004 D FolderFilled
0707bd0c 00000004 D Restart15
0707bd10 000001f4 D opcode_names
0707bf04 D __dso_handle
0707bf08 00000004 D __cxxabiv1::__terminate_handler
0707bf0c 00000004 D __cxxabiv1::__unexpected_handler
0707bf10 00000004 D _impure_ptr
0707bf18 00000460 d impure_data
0707c378 00000408 D __malloc_av_
0707c780 00000004 D __malloc_sbrk_base
0707c784 00000004 D __malloc_trim_threshold
0707c788 0000000c d __malloc_recursive_mutex
0707c794 00000004 d __tz_mutex
0707c798 00000008 D _tzname
0707c7a0 0000000c D __atexit_recursive_mutex
0707c7b0 00000058 d tzinfo
0707c808 00000002 d numempty
0707c80c 0000016c D __global_locale
0707c978 00000004 D environ
0707c97c 0000000c d __env_recursive_mutex
0707c988 D __TMC_END__
0707c998 d _GLOBAL_OFFSET_TABLE_
0707c9a4 D __tdata_lma
0707c9b0 t __frame_dummy_init_array_entry
0707c9b0 T __init_array_start
0707c9b0 B __preinit_array_end
0707c9b0 B __preinit_array_start
0707c9b0 D __tdata_lma_end
0707ca08 t __do_global_dtors_aux_fini_array_entry
0707ca08 T __init_array_end
0707ca0c B __c_bss_start
0707ca0c 00000004 B CTRPluginFramework::offset
0707ca10 00000004 b CTRPluginFramework::freefly(CTRPluginFramework::MenuEntry*)::x
0707ca14 00000004 b CTRPluginFramework::freefly(CTRPluginFramework::MenuEntry*)::y
0707ca18 00000004 b CTRPluginFramework::rapidFire(CTRPluginFramework::MenuEntry*)::counter
0707ca1c 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
0707ca20 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
0707ca24 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0707ca28 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0707ca34 00000004 b guard variable for CTRPluginFramework::setSpeed(CTRPluginFramework::MenuEntry*)::g_Multipliers
0707ca38 0000000c b CTRPluginFramework::setSpeed(CTRPluginFramework::MenuEntry*)::g_Multipliers
0707ca44 00000004 b guard variable for CTRPluginFramework::setSpeed(CTRPluginFramework::MenuEntry*)::multipliers
0707ca48 0000000c b CTRPluginFramework::setSpeed(CTRPluginFramework::MenuEntry*)::multipliers
0707ca54 00000004 b CTRPluginFramework::setSpeed(CTRPluginFramework::MenuEntry*)::choice
0707ca58 00000004 b guard variable for CTRPluginFramework::setPowerUp(CTRPluginFramework::MenuEntry*)::g_powerUps
0707ca5c 0000000c b CTRPluginFramework::setPowerUp(CTRPluginFramework::MenuEntry*)::g_powerUps
0707ca68 00000004 b guard variable for CTRPluginFramework::setPowerUp(CTRPluginFramework::MenuEntry*)::powerUps
0707ca6c 0000000c b CTRPluginFramework::setPowerUp(CTRPluginFramework::MenuEntry*)::powerUps
0707ca78 00000004 b guard variable for CTRPluginFramework::setBottomPowerUp(CTRPluginFramework::MenuEntry*)::gpowerUps
0707ca7c 0000000c b CTRPluginFramework::setBottomPowerUp(CTRPluginFramework::MenuEntry*)::gpowerUps
0707ca88 00000004 b guard variable for CTRPluginFramework::setBottomPowerUp(CTRPluginFramework::MenuEntry*)::powerUps
0707ca8c 0000000c b CTRPluginFramework::setBottomPowerUp(CTRPluginFramework::MenuEntry*)::powerUps
0707ca98 00000004 b guard variable for CTRPluginFramework::setOverworldPowerUp(CTRPluginFramework::MenuEntry*)::g_powerUps
0707ca9c 0000000c b CTRPluginFramework::setOverworldPowerUp(CTRPluginFramework::MenuEntry*)::g_powerUps
0707caa8 00000004 b guard variable for CTRPluginFramework::setOverworldPowerUp(CTRPluginFramework::MenuEntry*)::powerUps
0707caac 0000000c b CTRPluginFramework::setOverworldPowerUp(CTRPluginFramework::MenuEntry*)::powerUps
0707cab8 00000004 b g_onLoadCroLock
0707cabc 00000004 B g_mainThread
0707cac0 00000004 B CTRPluginFramework::g_keepEvent
0707cac4 00000004 B CTRPluginFramework::g_continueGameEvent
0707cac8 0000005c b CTRPluginFramework::exception_data
0707cb24 00000004 B CTRPluginFramework::g_keepThreadHandle
0707cb28 00000018 b g_onLoadCroHook
0707cb40 00000008 B CTRPluginFramework::_sdmcArchive
0707cb48 00000004 B g_gspEventThreadPriority
0707cb4c 00000004 B CTRPluginFramework::g_resumeEvent
0707cb50 00001000 b CTRPluginFramework::keepThreadStack
0707db50 00000004 B __ctru_heap_size
0707db54 00000004 B CTRPluginFramework::Color::Black
0707db58 00000004 B CTRPluginFramework::Color::White
0707db5c 00000004 B CTRPluginFramework::Color::Red
0707db60 00000004 B CTRPluginFramework::Color::Lime
0707db64 00000004 B CTRPluginFramework::Color::Blue
0707db68 00000004 B CTRPluginFramework::Color::Yellow
0707db6c 00000004 B CTRPluginFramework::Color::Cyan
0707db70 00000004 B CTRPluginFramework::Color::Magenta
0707db74 00000004 B CTRPluginFramework::Color::Silver
0707db78 00000004 B CTRPluginFramework::Color::Gray
0707db7c 00000004 B CTRPluginFramework::Color::Maroon
0707db80 00000004 B CTRPluginFramework::Color::Olive
0707db84 00000004 B CTRPluginFramework::Color::Green
0707db88 00000004 B CTRPluginFramework::Color::Purple
0707db8c 00000004 B CTRPluginFramework::Color::Teal
0707db90 00000004 B CTRPluginFramework::Color::Navy
0707db94 00000004 B CTRPluginFramework::Color::BlackGrey
0707db98 00000004 B CTRPluginFramework::Color::Brown
0707db9c 00000004 B CTRPluginFramework::Color::DarkGrey
0707dba0 00000004 B CTRPluginFramework::Color::DeepSkyBlue
0707dba4 00000004 B CTRPluginFramework::Color::DimGrey
0707dba8 00000004 B CTRPluginFramework::Color::DodgerBlue
0707dbac 00000004 B CTRPluginFramework::Color::Gainsboro
0707dbb0 00000004 B CTRPluginFramework::Color::ForestGreen
0707dbb4 00000004 B CTRPluginFramework::Color::LimeGreen
0707dbb8 00000004 B CTRPluginFramework::Color::Orange
0707dbbc 00000004 B CTRPluginFramework::Color::SkyBlue
0707dbc0 00000004 B CTRPluginFramework::Color::Turquoise
0707dbc4 00000004 b CTRPluginFramework::g_runningInstance
0707dbc8 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0707dbd0 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0707dbd8 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0707dbe0 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0707dbe4 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0707dbe6 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0707dbe8 00000180 b CTRPluginFramework::g_keyName
0707dd68 00000004 B CTRPluginFramework::__fileHandle
0707dd70 00000008 B CTRPluginFramework::Time::Zero
0707dd78 00000004 B CTRPluginFramework::System::OnAbort
0707dd7c 00000004 B CTRPluginFramework::Controller::_keysDown
0707dd80 00000004 B CTRPluginFramework::Controller::_keysHeld
0707dd84 00000004 B CTRPluginFramework::Controller::_keysReleased
0707dd88 000009c4 b CTRPluginFramework::g_rng
0707e750 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
0707e754 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
0707e758 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0707e75c 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
0707e75d 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
0707e75e 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
0707e75f 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
0707e760 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
0707e761 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
0707e762 00000001 B CTRPluginFramework::Preferences::ShowTopFps
0707e763 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
0707e764 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
0707e765 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
0707e768 00000070 B CTRPluginFramework::Preferences::Settings
0707e7d8 00000018 B CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0707e7f0 00000018 B CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
0707e808 00000018 B CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0707e820 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
0707e821 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
0707e822 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
0707e824 00000004 b CTRPluginFramework::defaultSysFont
0707e828 00000004 B CTRPluginFramework::g_fontAllocated
0707e82c 00000004 b CTRPluginFramework::tileData
0707e830 00000004 b CTRPluginFramework::glyph
0707e834 0000000c B CTRPluginFramework::Font::_mutex
0707e840 00000004 B CTRPluginFramework::g_glyphAllocated
0707e844 00000028 B CTRPluginFramework::Window::BottomWindow
0707e86c 00000028 B CTRPluginFramework::Window::TopWindow
0707e894 00000004 B CTRPluginFramework::RendererPriv::g_customColor
0707e898 00000008 B CTRPluginFramework::Renderer::hookContext
0707e8a0 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0707e8a4 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0707e8a8 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0707e8ac 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0707e8b8 0000000c B CTRPluginFramework::OSDImpl::RecLock
0707e8c4 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
0707e8d0 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0707e8e8 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0707e900 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0707e904 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0707e90c 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0707e910 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0707e918 00000018 B CTRPluginFramework::OSDImpl::OSDHook
0707e930 00000010 b CTRPluginFramework::InstallOSD()::returnCode
0707e940 00000004 B CTRPluginFramework::OSDImpl::HookReturn
0707e944 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0707e94c 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0707e970 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0707e97c 00000004 b CTRPluginFramework::g_second
0707e980 00000010 b CTRPluginFramework::g_fpsClock
0707e990 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0707e994 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0707e995 00000001 B CTRPluginFramework::OSDImpl::MessColors
0707e998 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0707e99c 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0707e9a0 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
0707e9a8 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
0707e9c8 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0707e9d0 00000004 b CTRPluginFramework::g_ctrpfString
0707e9d4 00000004 b CTRPluginFramework::g_bymeString
0707e9d8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0707e9e0 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0707e9e8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0707e9f0 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0707e9f8 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0707e9fc 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0707ea00 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0707ea08 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
0707ea10 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0707ea14 00000004 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0707ea18 00000004 b CTRPluginFramework::g_mode
0707ea1c 00000004 b CTRPluginFramework::g_OpenFileLock
0707ea20 00000004 b CTRPluginFramework::g_HookMode
0707ea28 00000040 b CTRPluginFramework::g_hookExportFile
0707ea68 00000010 b CTRPluginFramework::g_returncode
0707ea78 00000018 b CTRPluginFramework::g_FsTryOpenFileHook
0707ea90 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0707ea94 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0707ea98 00000004 b CTRPluginFramework::g_screenshotEntry
0707ea9c 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0707eaa0 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
0707eaa4 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0707eaa8 00000004 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0707eaac 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
0707eab0 00000010 b CTRPluginFramework::SubMenu::Draw()::background
0707eac0 00000004 B CTRPluginFramework::__g_hexEditor
0707eac4 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0707eac8 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0707ead8 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0707eadc 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0707eae0 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0707eaf0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0707eb00 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0707eb10 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0707eb14 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0707eb18 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0707eb1c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0707eb2c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0707eb30 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0707eb40 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0707eb44 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0707eb54 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0707eb58 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0707eb60 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0707eb68 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
0707eb70 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0707eb78 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
0707eb80 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0707eb84 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0707eb90 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0707eb9c 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0707eba8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0707ebb0 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0707ebb8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0707ebbc 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0707ebcc 00000004 b CTRPluginFramework::__pmARinstance
0707ebd0 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0707ebd4 00000004 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0707ebd8 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0707ebe8 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
0707ebf8 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
0707ebfc 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
0707ec00 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
0707ec08 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::waitLogo
0707ec18 00000004 b CTRPluginFramework::g_radioId
0707ec1c 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0707ec20 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
0707ec24 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
0707ec28 00000004 B CTRPluginFramework::_pool
0707ec30 00000008 B CTRPluginFramework::Screenshot::_timer
0707ec38 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0707ec40 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0707ec48 00000018 B CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
0707ec60 00000004 B CTRPluginFramework::Screenshot::_filecount
0707ec64 00000018 B CTRPluginFramework::Screenshot::Path[abi:cxx11]
0707ec7c 00000004 B CTRPluginFramework::Screenshot::_display
0707ec80 00000004 B CTRPluginFramework::Screenshot::_mode
0707ec88 00000008 B CTRPluginFramework::Screenshot::Timer
0707ec90 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0707ec94 00000004 B CTRPluginFramework::Screenshot::_task
0707ec98 00000004 B CTRPluginFramework::Screenshot::_count
0707ec9c 00000008 b CTRPluginFramework::g_sleepEvent
0707eca4 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
0707eca8 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
0707ecac 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
0707ecb0 00000004 B CTRPluginFramework::SystemImpl::AptStatus
0707ecb4 00000004 B CTRPluginFramework::HookManager::instance
0707ecb8 00000078 B CTRPluginFramework::Scheduler::_singleton
0707ed30 00000040 b CTRPluginFramework::_topBuf
0707ed70 00000004 B CTRPluginFramework::ScreenImpl::Top
0707ed74 00000040 b CTRPluginFramework::_botBuf
0707edb4 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0707edb8 0000000c b CTRPluginFramework::Heap::_mutex
0707edc4 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
0707edc8 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
0707edcc 00000008 b CTRPluginFramework::Heap::g_heapPool
0707edd4 0000000c b sAddrMap
0707ede0 00000018 B CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0707edf8 0000000c B CTRPluginFramework::FSPath::FSMutex
0707ee08 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0707ee0c 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0707ee70 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0707ee74 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0707ee78 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0707ee80 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0707ee84 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0707ee88 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0707ee94 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0707eea0 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0707eeb0 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
0707eeb2 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
0707eeb8 0000000c b _mutex
0707eec4 00000008 b sVramPool
0707eecc 0000000c b sAddrMap
0707eed8 00000004 b srvRefCount
0707eedc 00000004 b srv2Handle
0707eee0 00000004 b errfRefCount
0707eee4 00000004 b errfHandle
0707eee8 00000004 b sharedFontAddr
0707eeec 00000004 b arbiter
0707eef0 00000004 b cfguRefCount
0707eef4 00000004 b cfguHandle
0707eef8 00000004 b fsuHandle
0707ef00 00000080 b fsExemptArchives
0707ef80 00000004 b fsuRefCount
0707ef84 00000001 B fs
0707ef88 0000000c b aptFirstHook
0707ef94 00000004 b serviceName.7785
0707ef98 00000004 b aptRefCount
0707ef9c 0000000c b aptEvents
0707efa8 00000008 b aptSleepEvent
0707efb0 00000004 b aptEventHandlerThread
0707efb4 00000004 b aptMessageFunc
0707efb8 00000004 b aptMessageFuncData
0707efbc 00000001 b aptHomeButtonState
0707efbd 00000001 b flagInit.8135
0707efbe 00000001 b flagValue.8136
0707efc0 00001000 b aptParameters
0707ffc0 00001000 b __stack
07080fc0 00000004 b amRefCount
07080fc4 00000004 b amHandle
07080fc8 00000004 b acRefCount
07080fcc 00000004 b acHandle
07080fd0 00000004 b hidRefCount
07080fd4 00000004 b kOld
07080fd8 00000004 b kHeld
07080fdc 00000004 b cPos
07080fe0 00000004 b tPos
07080fe4 00000006 b aVec
07080fea 00000006 b gRate
07080ff0 00000004 b kDown
07080ff4 00000004 b kUp
07080ff8 00000004 b gspEventData
07080ffc 00000038 b gspEvents
07081034 0000001c b gspEventCounts
07081050 00000001 b gspRunEvents
07081054 00000004 b gspRefCount
07081058 00000004 b gfxSharedMemory
0708105c 00000001 b gfxThreadID
07081060 00000004 b irrstRefCount
07081064 00000004 b kHeld
07081068 00000004 b csPos
0708106c 00000004 b g_mainThreadVars
07081070 b saved_stack
07081078 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708107c 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07081094 0000000c B CTRPluginFramework::g_codeTypes
070810a0 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070810a4 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070810b0 00000001 b CTRPluginFramework::g_condAgainstData
070810b1 00000001 b CTRPluginFramework::g_newCondDataToggle
070810b4 00000004 b CTRPluginFramework::__arCodeEditor
070810b8 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070810bc 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070810c8 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
070810d0 00000004 b guard variable for CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
070810d8 00000008 b CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
070810e0 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070810e8 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070810f8 00000001 b CTRPluginFramework::g_progressLoop
07081100 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07081108 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07081110 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07081118 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07081120 00000004 b CTRPluginFramework::__converter
07081124 00000008 b sMappablePool
0708112c 0000000c b sAddrMap
07081138 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708113c 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
07081140 00000008 B CTRPluginFramework::ARHandler::Offset
07081148 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708114c 00000010 B CTRPluginFramework::ARHandler::Data
0708115c 00000008 B CTRPluginFramework::ARHandler::Storage
07081164 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
07081168 00000001 b CTRPluginFramework::ToggleFloat
0708116c 00000004 b CTRPluginFramework::g_context
07081170 00000fa0 b CTRPluginFramework::arStack
07082110 b completed.10351
07082114 b object.10356
0708212c 00000004 b (anonymous namespace)::__new_handler
07082130 00000010 b (anonymous namespace)::emergency_pool
07082140 0000000c b eh_globals
0708214c 00000010 V std::string::_Rep::_S_empty_rep_storage
0708215c 00000028 B __malloc_current_mallinfo
07082184 00000004 B __malloc_max_sbrked_mem
07082188 00000004 B __malloc_max_total_mem
0708218c 00000004 B __malloc_top_pad
07082190 0000000b b __tzname_dst
0708219c 0000000b b __tzname_std
070821a8 00000004 b prev_tzenv
070821ac 00000004 B _daylight
070821b0 00000004 B _timezone
070821b4 00000004 b initial_env
070821b8 00000004 b heap_start.7414
070821bc 00000004 B fake_heap_end
070821c0 00000004 B fake_heap_start
070821c4 00000048 B __syscalls
0708220c 00000004 B g_sharedFont
07082210 00000004 B charPerSheet
07082214 00000004 B hidMemHandle
07082218 00000004 B hidHandle
0708221c 00000014 B hidEvents
07082230 00000004 B hidSharedMem
07082234 00000004 B gspEventThread
07082238 00000004 B gspEvent
0708223c 00000004 B gspGpuHandle
07082240 00000004 B gspSharedMemHandle
07082244 00000004 B gspThreadEventHandle
07082248 00000004 B irrstMemHandle
0708224c 00000004 B irrstEvent
07082250 00000004 B irrstHandle
07082254 00000004 B irrstSharedMem
07082258 00000004 B __ctru_linear_heap
0708225c 00000004 B __tmp
07082260 00000004 B __ctru_linear_heap_size
07082264 00000004 B __system_retAddr
07082268 00000004 B __ctru_heap
0708226c B __c_bss_end
0708226c B __tls_start
0708228c A __end__
0708228c B __tls_end
